!function(){var e={722:function(){},279:function(){},331:function(){},115:function(){},298:function(){},323:function(){},320:function(){},458:function(){},528:function(){},204:function(){},529:function(){},224:function(){},573:function(e,t,s){var n=s(722);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),(0,s(534).A)("10832ddf",n,!0,{})},74:function(e,t,s){var n=s(279);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),(0,s(534).A)("27987818",n,!0,{})},358:function(e,t,s){var n=s(331);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),(0,s(534).A)("15043470",n,!0,{})},316:function(e,t,s){var n=s(115);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),(0,s(534).A)("2752a02a",n,!0,{})},967:function(e,t,s){var n=s(298);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),(0,s(534).A)("ceca10aa",n,!0,{})},348:function(e,t,s){var n=s(323);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),(0,s(534).A)("d83fd7f4",n,!0,{})},73:function(e,t,s){var n=s(320);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),(0,s(534).A)("467d04a9",n,!0,{})},35:function(e,t,s){var n=s(458);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),(0,s(534).A)("3f16c6ef",n,!0,{})},277:function(e,t,s){var n=s(528);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),(0,s(534).A)("5a759acb",n,!0,{})},269:function(e,t,s){var n=s(204);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),(0,s(534).A)("7baffb2f",n,!0,{})},846:function(e,t,s){var n=s(529);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),(0,s(534).A)("59126e74",n,!0,{})},201:function(e,t,s){var n=s(224);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),(0,s(534).A)("5d545459",n,!0,{})},534:function(e,t,s){"use strict";function n(e,t){for(var s=[],n={},i=0;i<t.length;i++){var a=t[i],o=a[0],r={id:e+":"+i,css:a[1],media:a[2],sourceMap:a[3]};n[o]?n[o].parts.push(r):s.push(n[o]={id:o,parts:[r]})}return s}s.d(t,{A:function(){return f}});var i,a="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!a)throw Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var o={},r=a&&(document.head||document.getElementsByTagName("head")[0]),l=null,d=0,c=!1,m=function(){},u=null,p="data-vue-ssr-id",h="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function f(e,t,s,i){c=s,u=i||{};var a=n(e,t);return g(a),function(t){for(var s=[],i=0;i<a.length;i++){var r=o[a[i].id];r.refs--,s.push(r)}t?g(a=n(e,t)):a=[];for(var i=0;i<s.length;i++){var r=s[i];if(0===r.refs){for(var l=0;l<r.parts.length;l++)r.parts[l]();delete o[r.id]}}}}function g(e){for(var t=0;t<e.length;t++){var s=e[t],n=o[s.id];if(n){n.refs++;for(var i=0;i<n.parts.length;i++)n.parts[i](s.parts[i]);for(;i<s.parts.length;i++)n.parts.push(v(s.parts[i]));n.parts.length>s.parts.length&&(n.parts.length=s.parts.length)}else{for(var a=[],i=0;i<s.parts.length;i++)a.push(v(s.parts[i]));o[s.id]={id:s.id,refs:1,parts:a}}}}function w(){var e=document.createElement("style");return e.type="text/css",r.appendChild(e),e}function v(e){var t,s,n=document.querySelector("style["+p+'~="'+e.id+'"]');if(n){if(c)return m;n.parentNode.removeChild(n)}if(h){var i=d++;t=b.bind(null,n=l||(l=w()),i,!1),s=b.bind(null,n,i,!0)}else t=y.bind(null,n=w()),s=function(){n.parentNode.removeChild(n)};return t(e),function(n){n?(n.css!==e.css||n.media!==e.media||n.sourceMap!==e.sourceMap)&&t(e=n):s()}}var k=(i=[],function(e,t){return i[e]=t,i.filter(Boolean).join("\n")});function b(e,t,s,n){var i=s?"":n.css;if(e.styleSheet)e.styleSheet.cssText=k(t,i);else{var a=document.createTextNode(i),o=e.childNodes;o[t]&&e.removeChild(o[t]),o.length?e.insertBefore(a,o[t]):e.appendChild(a)}}function y(e,t){var s=t.css,n=t.media,i=t.sourceMap;if(n&&e.setAttribute("media",n),u.ssrId&&e.setAttribute(p,t.id),i&&(s+="\n/*# sourceURL="+i.sources[0]+" */",s+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */"),e.styleSheet)e.styleSheet.cssText=s;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(s))}}}},t={};function s(n){var i=t[n];if(void 0!==i)return i.exports;var a=t[n]={id:n,exports:{}};return e[n](a,a.exports,s),a.exports}s.d=function(e,t){for(var n in t)s.o(t,n)&&!s.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="bundles/sumediawinestroapi/",window?.__sw__?.assetPath&&(s.p=window.__sw__.assetPath+"/bundles/sumediawinestroapi/"),function(){"use strict";s(201);let{Component:e}=Shopware;e.register("sumedia-winestro",{template:'{% block sumedia_winestro_index %}\n\n    <sw-page>\n        <template #content>\n\n            <div class="sumedia-winestro-menu">\n                <sw-tabs :isVertical="true">\n                    <sw-tabs-item :route="{ name: \'sumedia.winestro.configuration.overview\' }">\n                        {{ $tc(\'sumedia-winestro.tabs.overview\') }}\n                    </sw-tabs-item>\n                    <sw-tabs-item v-if="isInstallationNeeded" :route="{ name: \'sumedia.winestro.configuration.installation\' }">\n                        {{ $tc(\'sumedia-winestro.tabs.installation\') }}\n                    </sw-tabs-item>\n                    <sw-tabs-item v-if="isMigrationNeeded" :route="{ name: \'sumedia.winestro.configuration.migration\' }">\n                        {{ $tc(\'sumedia-winestro.tabs.migration\') }}\n                    </sw-tabs-item>\n                    <sw-tabs-item :disabled="isInstallationNeeded || isMigrationNeeded" :route="{ name: \'sumedia.winestro.configuration.loganalyzer\' }">\n                        {{ $tc(\'sumedia-winestro.tabs.loganalyzer\') }}\n                    </sw-tabs-item>\n                    <sw-tabs-item :disabled="isInstallationNeeded || isMigrationNeeded" :route="{ name: \'sumedia.winestro.configuration.connections\' }">\n                        {{ $tc(\'sumedia-winestro.tabs.connections\') }}\n                    </sw-tabs-item>\n                    <sw-tabs-item :disabled="isInstallationNeeded || isMigrationNeeded" :route="{ name: \'sumedia.winestro.configuration.measurements\' }">\n                        {{ $tc(\'sumedia-winestro.tabs.measurements\') }}\n                    </sw-tabs-item>\n                    <sw-tabs-item :disabled="isInstallationNeeded || isMigrationNeeded" :route="{ name: \'sumedia.winestro.configuration.properties\' }">\n                        {{ $tc(\'sumedia-winestro.tabs.properties\') }}\n                    </sw-tabs-item>\n                    <sw-tabs-item :disabled="isInstallationNeeded || isMigrationNeeded" :route="{ name: \'sumedia.winestro.configuration.salechannels\' }">\n                        {{ $tc(\'sumedia-winestro.tabs.saleChannels\') }}\n                    </sw-tabs-item>\n                    <sw-tabs-item :disabled="isInstallationNeeded || isMigrationNeeded" :route="{ name: \'sumedia.winestro.configuration.tasks\' }">\n                        {{ $tc(\'sumedia-winestro.tabs.tasks\') }}\n                    </sw-tabs-item>\n                    <sw-tabs-item :disabled="isInstallationNeeded || isMigrationNeeded" :route="{ name: \'sumedia.winestro.configuration.tasksExtensions\' }">\n                        {{ $tc(\'sumedia-winestro.tabs.tasks-extensions\') }}\n                    </sw-tabs-item>\n                    <sw-tabs-item :disabled="isInstallationNeeded || isMigrationNeeded" :route="{ name: \'sumedia.winestro.configuration.cron\' }">\n                        {{ $tc(\'sumedia-winestro.tabs.cron\') }}\n                    </sw-tabs-item>\n                </sw-tabs>\n            </div>\n\n            <div class="sumedia-winestro-router-view">\n                <router-view></router-view>\n            </div>\n\n        </template>\n    </sw-page>\n\n{% endblock %}\n',inject:["sumediaWinestro"],data(){return{isInstallationNeeded:!0,isMigrationNeeded:!1}},mounted(){this.checkInstallationIsNeeded(),this.checkMigrationIsNeeded()},methods:{async checkInstallationIsNeeded(){this.isInstallationNeeded=!0!==await this.sumediaWinestro.configService.get("installationDone")},async checkMigrationIsNeeded(){this.isMigrationNeeded=!1===await this.sumediaWinestro.configService.get("migrationDone")}}}),s(73);let{Component:t}=Shopware;t.register("sumedia-winestro-overview",{template:'{% block sumedia_winestro_overview %}\n\n    <div class="sumedia-winestro-title">\n        <h2>{{ $tc(\'sumedia-winestro.overview.title\') }}</h2>\n        <br class="clear" />\n    </div>\n\n    <sw-card :large="true">\n        <div class="sumedia-winestro-welcome-title">\n            <div class="left">\n                \n                <img src="https://localhost/sumedia/winestro/v2-6.6.winestro.de/bundles/sumediawinestroapi/administration/img/winestro-api-logo.webp" alt="Winestro Cloud Integration">\n            </div>\n            <div class="left">\n                <h3>{{ $tc(\'sumedia-winestro.overview.welcomeTitle\') }}</h3>\n                <p>{{ $tc(\'sumedia-winestro.overview.welcomeText\') }}</p>\n                <p>{{ $tc(\'sumedia-winestro.overview.welcomeText2\') }}</p>\n                <p>{{ $tc(\'sumedia-winestro.overview.welcomeText3\') }}</p>\n                <p>{{ $tc(\'sumedia-winestro.overview.welcomeText4\') }}</p>\n                <a target="_blank" href="https://sumedia-webdesign.atlassian.net/wiki/spaces/WINESTRO/pages/1081396/Plugin+in+Version+2.x">\n                    {{ $tc(\'sumedia-winestro.overview.toTheDocumentation\') }}\n                </a>\n            </div>\n        </div>\n    </sw-card>\n\n    <div v-if="isInstallationNeeded">\n        <sw-card :large="true">\n            <h3>{{ $tc(\'sumedia-winestro.overview.needInstallTitle\') }}</h3>\n            <p>{{ $tc(\'sumedia-winestro.overview.needInstall\') }}</p><br />\n            <p>{{ $tc(\'sumedia-winestro.overview.needInstall2\') }}</p><br />\n        </sw-card>\n    </div>\n\n    <div v-if="isMigrationNeeded">\n        <sw-card :large="true">\n            <h3>{{ $tc(\'sumedia-winestro.overview.needMigrationTitle\') }}</h3>\n            <p>{{ $tc(\'sumedia-winestro.overview.needMigration\') }}</p><br />\n            <p>{{ $tc(\'sumedia-winestro.overview.needMigration2\') }}</p><br />\n        </sw-card>\n    </div>\n\n    <div v-if="!isInstallationNeeded && !isMigrationNeeded">\n        <sw-card :large="true">\n            <h3>{{ $tc(\'sumedia-winestro.overview.readyTitle\') }}</h3>\n            <p>{{ $tc(\'sumedia-winestro.overview.ready\') }}</p><br />\n        </sw-card>\n    </div>\n\n    <div v-if="!isInstallationNeeded">\n        <sw-card :large="true">\n            <h3>{{ $tc(\'sumedia-winestro.overview.activityStateTitle\') }}</h3>\n            <template v-for="item in tasks">\n                <div class="sumedia-winestro-overview-active-tasks">\n                    <div class="left">{{ item.name }}</div>\n                    <div class="left">\n                        <span v-if="item.enabled.enabled">\n                            <sw-icon name="regular-circle-xxxs" size="12" color="#9c9"></sw-icon>\n                            {{ $tc(\'sumedia-winestro.active\') }}\n                        </span>\n                        <span v-else>\n                            <sw-icon name="regular-circle-xxxs" size="12" color="#c00"></sw-icon>\n                            {{ $tc(\'sumedia-winestro.inactive\') }}\n                        </span>\n                    </div>\n                    <br class="clear" />\n                </div>\n            </template>\n        </sw-card>\n    </div>\n\n{% endblock %}',inject:["sumediaWinestro"],data(){return{isInstallationNeeded:!1,isMigrationNeeded:!0,tasks:{}}},mounted(){this.checkInstallationIsNeeded(),this.checkMigrationIsNeeded(),this.loadTasks()},computed:{assetFilter(){return Shopware.Filter.getByName("asset")}},methods:{async checkInstallationIsNeeded(){this.isInstallationNeeded=!0!==await this.sumediaWinestro.configService.get("installationDone")},async checkMigrationIsNeeded(){this.isMigrationNeeded=!1===await this.sumediaWinestro.configService.get("migrationDone")},async loadTasks(){this.tasks=await this.sumediaWinestro.taskService.getTasks()}}}),s(358);let{Component:n,Mixin:i,Context:a,Utils:o}=Shopware,{Criteria:r}=Shopware.Data;n.register("sumedia-winestro-installation",{template:'{% block sumedia_winestro_installation %}\n\n    <h2>{{ $tc(\'sumedia-winestro.installation.title\') }}</h2>\n    <br class="clear" />\n\n    <p>{{ $tc(\'sumedia-winestro.installation.description\') }}</p><br />\n\n    <template v-if="isLoading">\n        <div class="sumedia-winestro-installation-loading">\n            <p>{{ $tc(\'sumedia-winestro.installation.loading\') }}</p>\n            <div class="loader">\n                <sw-loader></sw-loader>\n            </div>\n        </div>\n    </template>\n\n    <template v-else>\n        <div v-if="!connection.successful">\n            <sw-card :large="true" :isLoading="isLoading" :title="$tc(\'sumedia-winestro.installation.connection.title\')">\n\n                <sw-text-field :label="$tc(\'sumedia-winestro.connections.form.name\')"\n                               :placeholder="$tc(\'sumedia-winestro.connections.form.fillsAutomatically\')"\n                               v-model:value="connection.formData.name" required />\n\n                <sw-url-field :label="$tc(\'sumedia-winestro.connectionss.form.url\')"\n                              v-model:value="connection.formData.url" required />\n\n                <sw-number-field :label="$tc(\'sumedia-winestro.connections.form.userId\')"\n                                 v-model:value="connection.formData.userId" required />\n\n                <sw-number-field :label="$tc(\'sumedia-winestro.connections.form.shopId\')"\n                                 v-model:value="connection.formData.shopId" required />\n\n                <sw-text-field :label="$tc(\'sumedia-winestro.connections.form.secretId\')"\n                               v-model:value="connection.formData.secretId" required />\n\n                <sw-password-field :label="$tc(\'sumedia-winestro.connections.form.secretCode\')"\n                                   v-model:value="connection.formData.secretCode" required />\n\n                <sw-button :isLoading="this.connection.isLoading" @click="checkConnection">\n                    {{ $tc(\'sumedia-winestro.connections.checkConnection.button\') }}\n                </sw-button>\n\n                <sw-button :isLoading="this.connection.isLoading"\n                           :disabled="!connectionCheckSuccessful" variant="primary" @click="createConnection">\n                    {{ $tc(\'sumedia-winestro.save\')}}\n                </sw-button>\n\n            </sw-card>\n        </div>\n\n        <div v-else-if="!measurements.successful">\n\n            <sw-card :large="true" :isLoading="isLoading" :title="$tc(\'sumedia-winestro.measurements.title\')">\n\n                <div class="right">\n                    <sw-internal-link @click="createAllMeasurements()">{{ $tc(\'sumedia-winestro.installation.measurements.createAll\') }}</sw-internal-link>\n                </div>\n                <br class="clear" />\n                <br />\n                <br />\n\n                <template v-for="(item, key) in measurements.measurements">\n                    <div class="label">\n                        {{ $tc(\'sumedia-winestro.measurements.form.\' + key) }}\n                        <div class="right">\n                            <sw-internal-link @click="createMeasurement(key)">{{ $tc(\'sumedia-winestro.createAutomatically\') }}</sw-internal-link>\n                        </div>\n                    </div>\n                    <sw-entity-single-select v-model:value="measurements.formData[key]" entity="unit" required />\n                </template>\n\n                <div class="right">\n                    <sw-button :isLoading="this.measurements.isLoading"\n                               :disabled="!isMeasurementsComplete" variant="primary" @click="saveMeasurements">\n                        {{ $tc(\'sumedia-winestro.save\')}}\n                    </sw-button>\n                </div>\n                <br class="clear" />\n\n            </sw-card>\n\n        </div>\n\n        <div v-else-if="!properties.successful">\n\n            <sw-card :large="true" :isLoading="isLoading" :title="$tc(\'sumedia-winestro.installation.properties.title\')">\n\n                <div class="right">\n                    <sw-internal-link @click="createAllProperties()">{{ $tc(\'sumedia-winestro.installation.properties.createAll\') }}</sw-internal-link>\n                </div>\n                <br class="clear" />\n                <br />\n                <br />\n\n                <template v-for="(item, key) in properties.properties">\n                    <div class="label">\n                        {{ $tc(\'sumedia-winestro.properties.form.\' + key) }}\n                        <div class="right">\n                            <sw-internal-link @click="createProperty(key)">{{ $tc(\'sumedia-winestro.createAutomatically\') }}</sw-internal-link>\n                        </div>\n                    </div>\n                    <sw-entity-single-select v-model:value="properties.formData[key]" entity="property_group" required />\n                </template>\n\n                <div class="right">\n                    <sw-button :isLoading="this.properties.isLoading"\n                               :disabled="!isPropertiesComplete" variant="primary" @click="saveProperties">\n                        {{ $tc(\'sumedia-winestro.save\')}}\n                    </sw-button>\n                </div>\n                <br class="clear" />\n\n            </sw-card>\n\n        </div>\n\n        <div v-else-if="!salesChannel.successful">\n\n            <sw-card :large="true" :isLoading="isLoading" :title="$tc(\'sumedia-winestro.installation.salesChannel.title\')">\n\n                <sw-entity-single-select :label="$tc(\'sumedia-winestro.salesChannels.form.salesChannel\')"\n                                        v-model:value="salesChannel.formData.salesChannelId" entity="sales_channel" required />\n\n                <div class="right">\n                    <br />\n                    <sw-button :isLoading="this.salesChannel.isLoading"\n                               :disabled="!this.salesChannel.formData.salesChannelId" variant="primary" @click="saveSalesChannel">\n                        {{ $tc(\'sumedia-winestro.save\')}}\n                    </sw-button>\n                </div>\n                <br class="clear" />\n\n            </sw-card>\n\n        </div>\n\n        <div v-else-if="!payment.successful">\n\n            <sw-card :large="true" :isLoading="isLoading" :title="$tc(\'sumedia-winestro.installation.payment.title\')">\n\n                <table class="sumedia-winestro-table">\n                    <tr>\n                        <th>{{ $tc(\'sumedia-winestro.payment.paymentMapping.payment\') }}</th>\n                        <th>{{ $tc(\'sumedia-winestro.payment.paymentMapping.winestro\') }}</th>\n                    </tr>\n                    <template v-for="(payment, id) in this.paymentMapping">\n                        <tr>\n                            <td>{{ payment.name }}</td>\n                            <td>\n                                <sw-select-field\n                                    v-model:value="this.payment.formData[payment.id]"\n                                    :options="winestroPaymentMappingOptions"></sw-select-field>\n                            </td>\n                        </tr>\n                    </template>\n                </table>\n\n                <div class="right">\n                    <br />\n                    <sw-button :isLoading="payment.isLoading"\n                               :disabled="!isPaymentComplete" variant="primary" @click="savePayment()">\n                        {{ $tc(\'sumedia-winestro.save\')}}\n                    </sw-button>\n                </div>\n                <br class="clear" />\n\n            </sw-card>\n\n        </div>\n\n        <div v-else-if="!shipping.successful">\n\n            <sw-card :large="true" :isLoading="isLoading" :title="$tc(\'sumedia-winestro.installation.shipping.title\')">\n\n                <table class="sumedia-winestro-table">\n                    <tr>\n                        <th>{{ $tc(\'sumedia-winestro.shipping.shippingMapping.shipping\') }}</th>\n                        <th>{{ $tc(\'sumedia-winestro.shipping.shippingMapping.winestro\') }}</th>\n                    </tr>\n                    <template v-for="(shipping, id) in this.shippingMapping">\n                        <tr>\n                            <td>{{ shipping.name }}</td>\n                            <td>\n                                <sw-select-field v-model:value="this.shipping.formData[shipping.id]"\n                                                 :options="winestroShippingMappingOptions"></sw-select-field>\n                            </td>\n                        </tr>\n                    </template>\n                </table>\n\n                <div class="right">\n                    <br />\n                    <sw-button :isLoading="shipping.isLoading"\n                               :disabled="!isShippingComplete" variant="primary" @click="saveShipping">\n                        {{ $tc(\'sumedia-winestro.save\')}}\n                    </sw-button>\n                </div>\n                <br class="clear" />\n\n            </sw-card>\n\n        </div>\n\n        <div v-else-if="!tasks.successful">\n\n            <sw-card :large="true" :isLoading="isLoading" :title="$tc(\'sumedia-winestro.installation.tasks.title\')">\n\n                <p>{{ $tc(\'sumedia-winestro.installation.tasks.description\') }}</p>\n                <br />\n                <br />\n\n                <sw-entity-single-select :label="$tc(\'sumedia-winestro.tasks.form.tax\')"\n                                         v-model:value="tasks.formData.tax" entity="tax" required />\n\n                <sw-entity-single-select :label="$tc(\'sumedia-winestro.tasks.form.reducedTax\')"\n                                         v-model:value="tasks.formData.reducedTax" entity="tax" required />\n\n                <sw-entity-single-select :label="$tc(\'sumedia-winestro.tasks.form.deliveryTime\')"\n                                         v-model:value="tasks.formData.deliveryTime" entity="delivery_time" required />\n\n                <sw-entity-single-select :label="$tc(\'sumedia-winestro.tasks.form.mediaFolder\')"\n                                         v-model:value="tasks.formData.mediaFolder" entity="media_folder" required />\n\n                <sw-number-field :label="$tc(\'sumedia-winestro.tasks.form.maxImageWidth\')"\n                                 v-model:value="tasks.formData.maxImageWidth" required />\n\n                <sw-number-field :label="$tc(\'sumedia-winestro.tasks.form.maxImageHeight\')"\n                                 v-model:value="tasks.formData.maxImageHeight" required />\n\n                <sw-number-field :label="$tc(\'sumedia-winestro.tasks.form.sellingLimit\')"\n                                 v-model:value="tasks.formData.sellingLimit" required />\n\n                <sw-entity-single-select :label="$tc(\'sumedia-winestro.tasks.form.defaultManufacturer\')"\n                                         v-model:value="tasks.formData.defaultManufacturer" entity="product_manufacturer" required />\n\n                <sw-text-field :label="$tc(\'sumedia-winestro.tasks.form.categoryIdentifier\')"\n                               v-model:value="tasks.formData.categoryIdentifier" required />\n\n                <strong>{{ $tc(\'sumedia-winestro.tasks.form.articlenumber\') }}</strong><br />\n                <br />\n                <p>{{ $tc(\'sumedia-winestro.tasks.form.articlenumberDescription\') }}</p>\n                <br />\n                <sw-select-field :label="$tc(\'sumedia-winestro.tasks.form.articlenumber\')"\n                                 v-model:value="tasks.formData.articleNumberFormat"\n                                 :options="articleNumberFormatOptions"></sw-select-field>\n                <sw-select-field :label="$tc(\'sumedia-winestro.tasks.form.yearSeparator\')"\n                                 v-model:value="tasks.formData.articleNumberYearSeparator"\n                                 :options="separatorOptions"></sw-select-field>\n                <sw-select-field :label="$tc(\'sumedia-winestro.tasks.form.bottlingSeparator\')"\n                                 v-model:value="tasks.formData.articleNumberBottlingSeparator"\n                                 :options="separatorOptions"></sw-select-field>\n\n                <div>\n                    <div class="sumedia-winestro-task-switches">\n\n                        <strong>{{ $tc(\'sumedia-winestro.tasks.productImportTask.name\') }}</strong>\n\n                        <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.enabled.products.enabled\')"\n                                         v-model:value="tasks.formData.productimport" />\n\n                        <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.enabled.products.activestatus\')"\n                                         v-model:value="tasks.formData.activestatus" />\n\n                        <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.enabled.products.description\')"\n                                         v-model:value="tasks.formData.description" />\n\n                        <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.enabled.products.freeshipping\')"\n                                         v-model:value="tasks.formData.freeshipping" />\n\n                        <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.enabled.products.manufacturer\')"\n                                         v-model:value="tasks.formData.manufacturer" />\n\n                    </div>\n\n                    <div class="sumedia-winestro-task-switches">\n\n                        <strong>{{ $tc(\'sumedia-winestro.tasks.productImageUpdateTask.name\') }}</strong>\n\n                        <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.enabled.products.images\')"\n                                         v-model:value="tasks.formData.productimages" />\n\n                    </div>\n\n                    <div class="sumedia-winestro-task-switches">\n\n                        <strong>{{ $tc(\'sumedia-winestro.tasks.productStockTask.name\') }}</strong>\n\n                        <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.enabled.products.stockUpdate\')"\n                                         v-model:value="tasks.formData.productstock" />\n\n                    </div>\n\n                    <div class="sumedia-winestro-task-switches">\n\n                        <strong>{{ $tc(\'sumedia-winestro.tasks.productCategoryAssignmentTask.name\') }}</strong>\n\n                        <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.enabled.products.categories\')"\n                                         v-model:value="tasks.formData.categories" />\n\n                    </div>\n                    <br class="clear" />\n                </div>\n\n                <div>\n\n                    <div class="sumedia-winestro-tasks-switches">\n\n                        <strong>{{ $tc(\'sumedia-winestro.tasks.form.orderdata\') }}</strong>\n\n                        <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.enabled.orders.enabled\')"\n                                         v-model:value="tasks.formData.orderexport" />\n\n                        <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.enabled.orders.orderstatusupdate\')"\n                                         v-model:value="tasks.formData.orderstatusupdate" />\n\n                        <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.enabled.orders.sendWinestroEmail\')"\n                                         v-model:value="tasks.formData.sendWinestroEmail" />\n\n                    </div>\n\n                    <div class="sumedia-winestro-tasks-switches">\n\n                        <strong>{{ $tc(\'sumedia-winestro.tasks.form.newsletterdata\') }}</strong>\n\n                        <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.enabled.newsletter\')"\n                                         v-model:value="tasks.formData.newsletterReceiver" />\n                    </div>\n                    <br class="clear" />\n                </div>\n\n            </sw-card>\n\n            <sw-card :large="true">\n                <div class="right">\n                    <sw-button :isLoading="this.tasks.isLoading"\n                               :disabled="!isTasksComplete" variant="primary" @click="saveTasks">\n                        {{ $tc(\'sumedia-winestro.save\')}}\n                    </sw-button>\n                </div>\n                <br class="clear" />\n            </sw-card>\n\n        </div>\n\n        <div v-else>\n            <div class="sumedia-winestro-installation-loading">\n                <p>{{ $tc(\'sumedia-winestro.installation.done\') }}</p>\n            </div>\n        </div>\n\n    </template>\n\n{% endblock %}',inject:["sumediaWinestro","repositoryFactory"],mixins:[i.getByName("notification")],data(){return{isLoading:!0,langEnId:null,langDeId:null,successful:!1,paymentMapping:[],winestroPaymentMapping:[],winestroPaymentMappingOptions:[],winestroConnections:{},winestroConnectionsOptions:{},shippingSettedUp:!1,shippingMapping:[],winestroShippingMapping:[],winestroShippingMappingOptions:[],articleNumberFormatOptions:[{id:"[articlenumber+year+bottling]",value:"[articlenumber+year+bottling]",name:this.$tc("sumedia-winestro.tasks.form.articlenumber")+" und "+this.$tc("sumedia-winestro.tasks.form.year")+" und "+this.$tc("sumedia-winestro.tasks.form.bottling")},{id:"[articlenumber+year]",value:"[articlenumber+year]",name:this.$tc("sumedia-winestro.tasks.form.articlenumber")+" und "+this.$tc("sumedia-winestro.tasks.form.year")+" ohne "+this.$tc("sumedia-winestro.tasks.form.bottling")},{id:"[articlenumber]",value:"[articlenumber]",name:this.$tc("sumedia-winestro.tasks.form.articlenumber")+" ohne "+this.$tc("sumedia-winestro.tasks.form.year")+" ohne "+this.$tc("sumedia-winestro.tasks.form.bottling")}],separatorOptions:[{id:" ",value:" ",name:"Leerzeichen"},{id:"+",value:"+",name:"+"},{id:"-",value:"-",name:"-"},{id:"/",value:"/",name:"/"}],connection:{isLoading:!1,successful:!1,checkSuccessful:!1,checkedData:{},formData:{id:null,name:null,url:"https://weinstore.net/xml/v21.0",userId:null,shopId:1,secretId:"api-usr",secretCode:null}},measurements:{isLoading:!1,successful:!1,measurements:this.sumediaWinestro.measurementService.measurements,formData:{litre:null,kilo:null,gramperhundret:null,volumepercent:null}},properties:{isLoading:!1,successful:!1,properties:this.sumediaWinestro.propertyService.properties,formData:this.getPropertiesFormData()},salesChannel:{isLoading:!1,successful:!1,formData:{...this.sumediaWinestro.salesChannel}},payment:{isLoading:!1,successful:!1,formData:{}},shipping:{isLoading:!1,successful:!1,formData:{}},tasks:{isLoading:!1,successful:!1,formData:{tax:null,reducedTax:null,deliveryTime:null,mediaFolder:null,maxImageWidth:1200,maxImageHeight:1200,sellingLimit:0,defaultManufacturer:null,articleNumberFormat:"[articlenumber+year+bottling]",articleNumberYearSeparator:"+",articleNumberBottlingSeparator:"+",categoryIdentifier:"Winestro",productimport:!1,productimages:!1,productstock:!1,categories:!1,orderexport:!1,orderstatusupdate:!1,newsletterReceiver:!1,activestatus:!0,description:!0,freeshipping:!0,manufacturer:!0,sendWinestroEmail:!1},tasks:{productImportTask:{...this.sumediaWinestro.taskService.tasks.productImportTask,id:o.createId(),name:this.$tc("sumedia-winestro.tasks.productImportTask.name")},productImageUpdateTask:{...this.sumediaWinestro.taskService.tasks.productImageUpdateTask,id:o.createId(),name:this.$tc("sumedia-winestro.tasks.productImageUpdateTask.name")},productStockTask:{...this.sumediaWinestro.taskService.tasks.productStockTask,id:o.createId(),name:this.$tc("sumedia-winestro.tasks.productStockTask.name")},productCategoryAssignmentTask:{...this.sumediaWinestro.taskService.tasks.productCategoryAssignmentTask,id:o.createId(),name:this.$tc("sumedia-winestro.tasks.productCategoryAssignmentTask.name")},orderExportTask:{...this.sumediaWinestro.taskService.tasks.orderExportTask,id:o.createId(),name:this.$tc("sumedia-winestro.tasks.orderExportTask.name")},orderStatusUpdateTask:{...this.sumediaWinestro.taskService.tasks.orderStatusUpdateTask,id:o.createId(),name:this.$tc("sumedia-winestro.tasks.orderStatusUpdateTask.name")},newsletterReceiverImportTask:{...this.sumediaWinestro.taskService.tasks.newsletterReceiverImportTask,id:o.createId(),name:this.$tc("sumedia-winestro.tasks.newsletterReceiverImportTask.name")}}}}},async mounted(){!0===await this.sumediaWinestro.configService.get("installationDone")?(this.connection.successful=!0,this.measurements.successful=!0,this.properties.successful=!0,this.salesChannel.successful=!0,this.payment.successful=!0,this.shipping.successful=!0,this.tasks.successful=!0,this.successful=!0,this.isLoading=!1,this.$parent.$parent.$parent.isInstallationNeeded=!1):(await this.loadLanguage(),await this.loadMeasurementConfig(),await this.loadPropertiesConfig(),await this.loadWinestroConnectionConfig().then(async()=>{await this.loadSalesChannelConfig().then(async()=>{await this.loadPaymentMapping(),await this.loadPaymentMappingConfig(),await this.loadShippingMapping(),await this.loadShippingMappingConfig()})})),this.isLoading=!1},computed:{connectionCheckSuccessful(){let e=this.connection.checkedData,t=this.connection.formData;return this.connection.checkSuccessful&&(""===t.name||t.url!==e.url||t.userId!==e.userId||t.shopId!==e.shopId||t.secretId!==e.secretId||t.secretCode!==e.secretCode)?(this.connection.checkSuccessful=!1,!1):this.connection.checkSuccessful},isMeasurementsComplete(){return!Object.values(this.measurements.formData).includes(null)},isPropertiesComplete(){return!Object.values(this.properties.formData).includes(null)},isSaleschannelComplete(){return!Object.values(this.saleschannel.formData).includes(null)},isPaymentComplete(){return!Object.values(this.payment.formData).includes(null)},isShippingComplete(){return!Object.values(this.shipping.formData).includes(null)},isTasksComplete(){return!Object.values(this.tasks.formData).includes(null)&&""!==this.tasks.formData.categoryIdentifier},salesChannelRepository(){return this.repositoryFactory.create("sales_channel")}},watch:{winestroPaymentMapping(){let e=[];for(let t in this.winestroPaymentMapping){let s=this.winestroPaymentMapping[t];e.push({id:s,value:s,name:this.$tc("sumedia-winestro.payment-names."+t)})}this.winestroPaymentMappingOptions=e},winestroShippingMapping(){let e=[];for(let t in this.winestroShippingMapping){let s=this.winestroShippingMapping[t];e.push({id:s,value:s,name:this.$tc("sumedia-winestro.shipping-names."+t)})}this.winestroShippingMappingOptions=e}},methods:{getPropertiesFormData(){let e={};return Object.keys(this.sumediaWinestro.propertyService.properties).forEach(t=>{e[t]=null}),e},async getLanguageIdByCode(e){let t=this.repositoryFactory.create("locale"),s=this.repositoryFactory.create("language"),n=new r;return n.addFilter(r.equals("code",e)),await t.search(n,a.api).then(async e=>{if(!e.length)return null;{let t=new r;return t.addFilter(r.equals("localeId",e[0].id)),await s.search(t,a.api).then(e=>e.length?e[0].id:null)}})},async loadLanguage(){this.langEnId=await this.getLanguageIdByCode("en-GB"),this.langDeId=await this.getLanguageIdByCode("de-DE"),this.languageId=a.api.systemLanguageId},async loadPaymentMapping(){if(this.paymentMapping=[],this.salesChannel.formData.salesChannelId){let e=this.repositoryFactory.create("sales_channel"),t=new r;t.addAssociation("paymentMethods"),t.addFilter(r.equals("id",this.salesChannel.formData.salesChannelId)),e.search(t,a.api).then(e=>{if(e.length){let t=e[0].paymentMethods,s=[];t.forEach(e=>{s.push({id:e.id,name:e.name}),void 0===this.payment.formData[e.id]&&(this.payment.formData[e.id]=null)}),this.paymentMapping=s}})}this.sumediaWinestro.apiService.post("sumedia-winestro/mapping",{mapper:"PaymentConfigMapper"}).then(e=>{e.success&&(this.winestroPaymentMapping=e.mapping)})},async loadShippingMapping(){if(this.shippingMapping=[],this.salesChannel.formData.salesChannelId){let e=this.repositoryFactory.create("sales_channel"),t=new r;t.addAssociation("shippingMethods"),t.addFilter(r.equals("id",this.salesChannel.formData.salesChannelId)),e.search(t,a.api).then(e=>{if(e.length){let t=e[0].shippingMethods,s=[];t.forEach(e=>{s.push({id:e.id,name:e.name}),void 0===this.shipping.formData[e.id]&&(this.shipping.formData[e.id]=null)}),this.shippingMapping=s}})}this.sumediaWinestro.apiService.post("sumedia-winestro/mapping",{mapper:"ShippingConfigMapper"}).then(e=>{e.success&&(this.winestroShippingMapping=e.mapping)})},async loadWinestroConnectionConfig(){let e=await this.sumediaWinestro.getWinestroConnections();if(null!==e){let t=Object.values(e)[0];Object.values(t).length&&(this.connection.formData=t,this.connection.successful=!0,this.winestroConnectionsOptions=[{id:t.id,value:t.id,label:t.name}])}},async loadMeasurementConfig(){let e=await this.sumediaWinestro.configService.get("measurements");if(null!==e&&Object.values(e).length){for(let t in e)this.measurements.formData[t]=e[t];this.measurements.successful=!0}else for(let e in this.measurements.measurements){let t=a.api.systemLanguageId===this.langEnId?this.measurements.measurements[e][0]:this.measurements.measurements[e][2],s=await this.sumediaWinestro.measurementService.getUnit(t);null!==s&&(this.measurements.formData[e]=s.id)}},async loadPropertiesConfig(){let e=await this.sumediaWinestro.configService.get("properties");if(null!==e&&Object.values(e).length){for(let t in e)this.properties.formData[t]=e[t];this.properties.successful=!0}else for(let e in this.properties.properties){let t=a.api.systemLanguageId===this.langEnId?this.properties.properties[e][0]:this.properties.properties[e][1],s=await this.sumediaWinestro.propertyService.getPropertyGroup(t);null!==s&&(this.properties.formData[e]=s.id)}},async loadSalesChannelConfig(){let e=await this.sumediaWinestro.getSalesChannels();if(null!==e&&Object.values(e).length){let t=Object.values(e)[0];this.salesChannel.formData=t,this.salesChannel.successful=!0}},async loadPaymentMappingConfig(){let e=await this.sumediaWinestro.getSalesChannels();if(null!==e&&Object.values(e).length){let t=Object.values(e)[0];if("undefined"!==this.connection.formData.id){let e=t.winestroConnections[this.connection.formData.id].paymentMapping;null!==e&&(this.payment.formData=e,this.salesChannel.formData.winestroConnections[this.connection.formData.id].paymentMapping=e,this.payment.successful=!0)}}},async loadShippingMappingConfig(){let e=await this.sumediaWinestro.getSalesChannels();if(null!==e&&Object.values(e).length){let t=Object.values(e)[0];if("undefined"!==this.connection.formData.id){let e=t.winestroConnections[this.connection.formData.id].shippingMapping;null!==e&&(this.shipping.formData=e,this.salesChannel.formData.winestroConnections[this.connection.formData.id].shippingMapping=e,this.shipping.successful=!0)}}},async checkConnection(){this.connection.isLoading=!0,this.connection.checkSuccessful=!1;let e=await this.sumediaWinestro.requestWinestroConnection(this.connection.formData.url,this.connection.formData.userId,this.connection.formData.shopId,this.connection.formData.secretId,this.connection.formData.secretCode);e.success?((null===this.connection.formData.name||""===this.connection.formData.name)&&(this.connection.formData.name=e.name),this.connection.checkSuccessful=!0,this.connection.checkedData={...this.connection.formData},this.createNotificationSuccess({title:this.$tc("sumedia-winestro.connections.checkConnection.title"),message:this.$tc("sumedia-winestro.connections.checkConnection.success")})):this.createNotificationError({title:this.$tc("sumedia-winestro.connections.checkConnection.title"),message:e.message}),this.connection.isLoading=!1},async createConnection(){this.connection.isLoading=!0;let e=this.sumediaWinestro.getWinestroConnectionId(this.connection.formData.userId,this.connection.formData.shopId,this.connection.formData.secretId);await this.sumediaWinestro.setWinestroConnection(e,this.connection.formData.name,this.connection.formData.url,this.connection.formData.userId,this.connection.formData.shopId,this.connection.formData.secretId,this.connection.formData.secretCode).then(()=>{this.connection.formData.id=e,this.connection.isLoading=!1,this.connection.successful=!0})},async createAllMeasurements(){for(let e in this.measurements.measurements)null===this.measurements.formData[e]&&this.createMeasurement(e)},async createAllProperties(){for(let e in this.properties.properties)null===this.properties.formData[e]&&this.createProperty(e)},async createMeasurement(e){if(void 0!==this.measurements.measurements[e]){let t=this.languageId===this.langEnId?this.measurements.measurements[e][0]:this.measurements.measurements[e][2],s=this.languageId===this.langEnId?this.measurements.measurements[e][1]:this.measurements.measurements[e][3];null===this.measurements.formData[e]&&(this.measurements.formData[e]=await this.sumediaWinestro.measurementService.createUnit(t,s))}},async createProperty(e){if(console.log(this.properties.formData),void 0!==this.properties.properties[e]){let t=this.languageId===this.langEnId?this.properties.properties[e][0]:this.properties.properties[e][1];null===this.properties.formData[e]&&(this.properties.formData[e]=await this.sumediaWinestro.propertyService.createPropertyGroup(t))}},async saveMeasurements(){if(this.measurements.isLoading=!0,Object.values(this.measurements.formData).includes(null))return null;await this.sumediaWinestro.configService.set("measurements",this.measurements.formData),this.measurements.isLoading=!1,this.measurements.successful=!0},async saveProperties(){if(this.properties.isLoading=!0,Object.values(this.properties.formData).includes(null))return null;await this.sumediaWinestro.configService.set("properties",this.properties.formData),this.properties.isLoading=!1,this.properties.successful=!0},async saveSalesChannel(){if(this.salesChannel.isLoading=!0,!this.salesChannel.formData.salesChannelId||null===this.connection.formData.id)return null;void 0===this.salesChannel.formData.winestroConnections[this.connection.formData.id]&&(this.salesChannel.formData.winestroConnections[this.connection.formData.id]={...this.sumediaWinestro.winestroConnections,winestroConnectionId:this.connection.formData.id}),await this.sumediaWinestro.setSalesChannel(this.salesChannel.formData.salesChannelId,this.salesChannel.formData),this.salesChannel.isLoading=!1,this.salesChannel.successful=!0,await this.loadPaymentMapping(),await this.loadShippingMapping()},async savePayment(){if(this.payment.isLoading=!0,Object.values(this.payment.formData).includes(null))return null;this.salesChannel.formData.winestroConnections[this.connection.formData.id].paymentMapping=this.payment.formData,await this.saveSalesChannel(),this.payment.isLoading=!1,this.payment.successful=!0},async saveShipping(){if(this.shipping.isLoading=!0,Object.values(this.shipping.formData).includes(null))return null;this.salesChannel.formData.winestroConnections[this.connection.formData.id].shippingMapping=this.shipping.formData,await this.saveSalesChannel(),this.shipping.isLoading=!1,this.shipping.successful=!0},async saveTax(){if(this.tax.isLoading=!0,Object.values(this.tax.formData).includes(null))return null;this.salesChannel.formData.winestroConnections[this.connection.formData.id].tax=this.tax.formData.tax,this.salesChannel.formData.winestroConnections[this.connection.formData.id].reducedTax=this.tax.formData.reducedTax,await this.saveSalesChannel(),this.tax.isLoading=!1,this.tax.successful=!0},async saveTasks(){this.tasks.isLoading=!0;let e={};for(let t in e[this.tasks.tasks.productImportTask.id]={...this.tasks.tasks.productImportTask,winestroConnectionId:this.connection.formData.id,articleNumberFormat:this.tasks.formData.articleNumberFormat,articleNumberYearSeparator:this.tasks.formData.articleNumberYearSeparator,articleNumberBottlingSeparator:this.tasks.formData.articleNumberBottlingSeparator,defaultManufacturer:this.tasks.formData.defaultManufacturer,tax:this.tasks.formData.tax,reducedTax:this.tasks.formData.reducedTax,deliveryTime:this.tasks.formData.deliveryTime,visibleInSalesChannelsIds:[this.salesChannel.formData.salesChannelId],enabled:{enabled:this.tasks.formData.productimport,activestatus:this.tasks.formData.activestatus,description:this.tasks.formData.description,freeshipping:this.tasks.formData.freeshipping,manufacturer:this.tasks.formData.manufacturer},execute:[this.tasks.tasks.productImageUpdateTask.id,this.tasks.tasks.productStockTask.id,this.tasks.tasks.productCategoryAssignmentTask.id]},e[this.tasks.tasks.productImageUpdateTask.id]={...this.tasks.tasks.productImageUpdateTask,winestroConnectionId:this.connection.formData.id,maxWidth:this.tasks.formData.maxImageWidth,maxHeight:this.tasks.formData.maxImageHeight,mediaFolder:this.tasks.formData.mediaFolder,enabled:{enabled:this.tasks.formData.productimages}},e[this.tasks.tasks.productStockTask.id]={...this.tasks.tasks.productStockTask,winestroConnectionId:this.connection.formData.id,sellingLimit:this.tasks.formData.sellingLimit,enabled:{enabled:this.tasks.formData.productstock}},e[this.tasks.tasks.productCategoryAssignmentTask.id]={...this.tasks.tasks.productCategoryAssignmentTask,winestroConnectionId:this.connection.formData.id,salesChannelId:this.salesChannel.formData.salesChannelId,enabled:{enabled:this.tasks.formData.categories}},e[this.tasks.tasks.orderExportTask.id]={...this.tasks.tasks.orderExportTask,winestroConnectionId:this.connection.formData.id,productsFromWinestroConnectionIds:[this.connection.formData.id],productsFromSalesChannelsIds:[this.salesChannel.formData.salesChannelId],enabled:{enabled:this.tasks.formData.newsletterReceiver,sendWinestroEmail:this.tasks.formData.sendWinestroEmail}},e[this.tasks.tasks.orderStatusUpdateTask.id]={...this.tasks.tasks.orderStatusUpdateTask,winestroConnectionId:this.connection.formData.id,enabled:{enabled:this.tasks.formData.orderstatusupdate}},e[this.tasks.tasks.newsletterReceiverImportTask.id]={...this.tasks.tasks.newsletterReceiverImportTask,winestroConnectionId:this.connection.formData.id,salesChannelId:this.salesChannel.formData.salesChannelId,enabled:{enabled:this.tasks.formData.newsletterReceiver}},e)await this.sumediaWinestro.taskService.setTask(t,e[t]);this.tasks.isLoading=!1,this.tasks.successful=!0,this.postInstallation()},async postInstallation(){await this.sumediaWinestro.customFieldService.upsertCustomFields();let e={},t=o.createId();e[t]={id:t,times:"15m",taskId:this.tasks.tasks.productImportTask.id,name:this.$tc("sumedia-winestro.cron.names.productImport"),enabled:{enabled:!0}},e[t=o.createId()]={id:t,times:"5m",taskId:this.tasks.tasks.orderExportTask.id,name:this.$tc("sumedia-winestro.cron.names.orderExport"),enabled:{enabled:!0}},e[t=o.createId()]={id:t,times:"5m",taskId:this.tasks.tasks.orderStatusUpdateTask.id,name:this.$tc("sumedia-winestro.cron.names.orderStatusUpdate"),enabled:{enabled:!0}},e[t=o.createId()]={id:t,times:"1h",taskId:this.tasks.tasks.newsletterReceiverImportTask.id,name:this.$tc("sumedia-winestro.cron.names.newsletterReceiverImport"),enabled:{enabled:!0}},await this.sumediaWinestro.configService.set("cron",e),this.sumediaWinestro.configService.set("installationDone",!0),this.successful=!0,this.$parent.$parent.$parent.isInstallationNeeded=!1}}}),s(348);let{Component:l,Mixin:d}=Shopware;l.register("sumedia-winestro-migration",{template:'{% block sumedia_winestro_installation %}\n\n    <h2>{{ $tc(\'sumedia-winestro.installation.title\') }}</h2>\n    <br class="clear" />\n\n    <p>{{ $tc(\'sumedia-winestro.installation.description\') }}</p><br />\n\n    <template v-if="isLoading">\n        <div class="sumedia-winestro-installation-loading">\n            <p>{{ $tc(\'sumedia-winestro.installation.loading\') }}</p>\n            <div class="loader">\n                <sw-loader></sw-loader>\n            </div>\n        </div>\n    </template>\n\n    <template v-else>\n        <div v-if="!connection.successful">\n            <sw-card :large="true" :isLoading="isLoading" :title="$tc(\'sumedia-winestro.installation.connection.title\')">\n\n                <sw-text-field :label="$tc(\'sumedia-winestro.connections.form.name\')"\n                               :placeholder="$tc(\'sumedia-winestro.connections.form.fillsAutomatically\')"\n                               v-model:value="connection.formData.name" required />\n\n                <sw-url-field :label="$tc(\'sumedia-winestro.connectionss.form.url\')"\n                              v-model:value="connection.formData.url" required />\n\n                <sw-number-field :label="$tc(\'sumedia-winestro.connections.form.userId\')"\n                                 v-model:value="connection.formData.userId" required />\n\n                <sw-number-field :label="$tc(\'sumedia-winestro.connections.form.shopId\')"\n                                 v-model:value="connection.formData.shopId" required />\n\n                <sw-text-field :label="$tc(\'sumedia-winestro.connections.form.secretId\')"\n                               v-model:value="connection.formData.secretId" required />\n\n                <sw-password-field :label="$tc(\'sumedia-winestro.connections.form.secretCode\')"\n                                   v-model:value="connection.formData.secretCode" required />\n\n                <sw-button :isLoading="this.connection.isLoading" @click="checkConnection">\n                    {{ $tc(\'sumedia-winestro.connections.checkConnection.button\') }}\n                </sw-button>\n\n                <sw-button :isLoading="this.connection.isLoading"\n                           :disabled="!connectionCheckSuccessful" variant="primary" @click="createConnection">\n                    {{ $tc(\'sumedia-winestro.save\')}}\n                </sw-button>\n\n            </sw-card>\n        </div>\n\n        <div v-else-if="!measurements.successful">\n\n            <sw-card :large="true" :isLoading="isLoading" :title="$tc(\'sumedia-winestro.measurements.title\')">\n\n                <div class="right">\n                    <sw-internal-link @click="createAllMeasurements()">{{ $tc(\'sumedia-winestro.installation.measurements.createAll\') }}</sw-internal-link>\n                </div>\n                <br class="clear" />\n                <br />\n                <br />\n\n                <template v-for="(item, key) in measurements.measurements">\n                    <div class="label">\n                        {{ $tc(\'sumedia-winestro.measurements.form.\' + key) }}\n                        <div class="right">\n                            <sw-internal-link @click="createMeasurement(key)">{{ $tc(\'sumedia-winestro.createAutomatically\') }}</sw-internal-link>\n                        </div>\n                    </div>\n                    <sw-entity-single-select v-model:value="measurements.formData[key]" entity="unit" required />\n                </template>\n\n                <div class="right">\n                    <sw-button :isLoading="this.measurements.isLoading"\n                               :disabled="!isMeasurementsComplete" variant="primary" @click="saveMeasurements">\n                        {{ $tc(\'sumedia-winestro.save\')}}\n                    </sw-button>\n                </div>\n                <br class="clear" />\n\n            </sw-card>\n\n        </div>\n\n        <div v-else-if="!properties.successful">\n\n            <sw-card :large="true" :isLoading="isLoading" :title="$tc(\'sumedia-winestro.installation.properties.title\')">\n\n                <div class="right">\n                    <sw-internal-link @click="createAllProperties()">{{ $tc(\'sumedia-winestro.installation.properties.createAll\') }}</sw-internal-link>\n                </div>\n                <br class="clear" />\n                <br />\n                <br />\n\n                <template v-for="(item, key) in properties.properties">\n                    <div class="label">\n                        {{ $tc(\'sumedia-winestro.properties.form.\' + key) }}\n                        <div class="right">\n                            <sw-internal-link @click="createProperty(key)">{{ $tc(\'sumedia-winestro.createAutomatically\') }}</sw-internal-link>\n                        </div>\n                    </div>\n                    <sw-entity-single-select v-model:value="properties.formData[key]" entity="property_group" required />\n                </template>\n\n                <div class="right">\n                    <sw-button :isLoading="this.properties.isLoading"\n                               :disabled="!isPropertiesComplete" variant="primary" @click="saveProperties">\n                        {{ $tc(\'sumedia-winestro.save\')}}\n                    </sw-button>\n                </div>\n                <br class="clear" />\n\n            </sw-card>\n\n        </div>\n\n        <div v-else-if="!salesChannel.successful">\n\n            <sw-card :large="true" :isLoading="isLoading" :title="$tc(\'sumedia-winestro.installation.salesChannel.title\')">\n\n                <sw-entity-single-select :label="$tc(\'sumedia-winestro.salesChannels.form.salesChannel\')"\n                                        v-model:value="salesChannel.formData.salesChannelId" entity="sales_channel" required />\n\n                <div class="right">\n                    <br />\n                    <sw-button :isLoading="this.salesChannel.isLoading"\n                               :disabled="!this.salesChannel.formData.salesChannelId" variant="primary" @click="saveSalesChannel">\n                        {{ $tc(\'sumedia-winestro.save\')}}\n                    </sw-button>\n                </div>\n                <br class="clear" />\n\n            </sw-card>\n\n        </div>\n\n        <div v-else-if="!payment.successful">\n\n            <sw-card :large="true" :isLoading="isLoading" :title="$tc(\'sumedia-winestro.installation.payment.title\')">\n\n                <table class="sumedia-winestro-table">\n                    <tr>\n                        <th>{{ $tc(\'sumedia-winestro.payment.paymentMapping.payment\') }}</th>\n                        <th>{{ $tc(\'sumedia-winestro.payment.paymentMapping.winestro\') }}</th>\n                    </tr>\n                    <template v-for="(payment, id) in this.paymentMapping">\n                        <tr>\n                            <td>{{ payment.name }}</td>\n                            <td>\n                                <sw-select-field\n                                    v-model:value="this.payment.formData[payment.id]"\n                                    :options="winestroPaymentMappingOptions"></sw-select-field>\n                            </td>\n                        </tr>\n                    </template>\n                </table>\n\n                <div class="right">\n                    <br />\n                    <sw-button :isLoading="payment.isLoading"\n                               :disabled="!isPaymentComplete" variant="primary" @click="savePayment()">\n                        {{ $tc(\'sumedia-winestro.save\')}}\n                    </sw-button>\n                </div>\n                <br class="clear" />\n\n            </sw-card>\n\n        </div>\n\n        <div v-else-if="!shipping.successful">\n\n            <sw-card :large="true" :isLoading="isLoading" :title="$tc(\'sumedia-winestro.installation.shipping.title\')">\n\n                <table class="sumedia-winestro-table">\n                    <tr>\n                        <th>{{ $tc(\'sumedia-winestro.shipping.shippingMapping.shipping\') }}</th>\n                        <th>{{ $tc(\'sumedia-winestro.shipping.shippingMapping.winestro\') }}</th>\n                    </tr>\n                    <template v-for="(shipping, id) in this.shippingMapping">\n                        <tr>\n                            <td>{{ shipping.name }}</td>\n                            <td>\n                                <sw-select-field v-model:value="this.shipping.formData[shipping.id]"\n                                                 :options="winestroShippingMappingOptions"></sw-select-field>\n                            </td>\n                        </tr>\n                    </template>\n                </table>\n\n                <div class="right">\n                    <br />\n                    <sw-button :isLoading="shipping.isLoading"\n                               :disabled="!isShippingComplete" variant="primary" @click="saveShipping">\n                        {{ $tc(\'sumedia-winestro.save\')}}\n                    </sw-button>\n                </div>\n                <br class="clear" />\n\n            </sw-card>\n\n        </div>\n\n        <div v-else-if="!tasks.successful">\n\n            <sw-card :large="true" :isLoading="isLoading" :title="$tc(\'sumedia-winestro.installation.tasks.title\')">\n\n                <p>{{ $tc(\'sumedia-winestro.installation.tasks.description\') }}</p>\n                <br />\n                <br />\n\n                <sw-entity-single-select :label="$tc(\'sumedia-winestro.tasks.form.tax\')"\n                                         v-model:value="tasks.formData.tax" entity="tax" required />\n\n                <sw-entity-single-select :label="$tc(\'sumedia-winestro.tasks.form.reducedTax\')"\n                                         v-model:value="tasks.formData.reducedTax" entity="tax" required />\n\n                <sw-entity-single-select :label="$tc(\'sumedia-winestro.tasks.form.deliveryTime\')"\n                                         v-model:value="tasks.formData.deliveryTime" entity="delivery_time" required />\n\n                <sw-entity-single-select :label="$tc(\'sumedia-winestro.tasks.form.mediaFolder\')"\n                                         v-model:value="tasks.formData.mediaFolder" entity="media_folder" required />\n\n                <sw-number-field :label="$tc(\'sumedia-winestro.tasks.form.maxImageWidth\')"\n                                 v-model:value="tasks.formData.maxImageWidth" required />\n\n                <sw-number-field :label="$tc(\'sumedia-winestro.tasks.form.maxImageHeight\')"\n                                 v-model:value="tasks.formData.maxImageHeight" required />\n\n                <sw-number-field :label="$tc(\'sumedia-winestro.tasks.form.sellingLimit\')"\n                                 v-model:value="tasks.formData.sellingLimit" required />\n\n                <sw-entity-single-select :label="$tc(\'sumedia-winestro.tasks.form.defaultManufacturer\')"\n                                         v-model:value="tasks.formData.defaultManufacturer" entity="product_manufacturer" required />\n\n                <sw-text-field :label="$tc(\'sumedia-winestro.tasks.form.categoryIdentifier\')"\n                               v-model:value="tasks.formData.categoryIdentifier" required />\n\n                <strong>{{ $tc(\'sumedia-winestro.tasks.form.articlenumber\') }}</strong><br />\n                <br />\n                <p>{{ $tc(\'sumedia-winestro.tasks.form.articlenumberDescription\') }}</p>\n                <br />\n                <sw-select-field :label="$tc(\'sumedia-winestro.tasks.form.articlenumber\')"\n                                 v-model:value="tasks.formData.articleNumberFormat"\n                                 :options="articleNumberFormatOptions"></sw-select-field>\n                <sw-select-field :label="$tc(\'sumedia-winestro.tasks.form.yearSeparator\')"\n                                 v-model:value="tasks.formData.articleNumberYearSeparator"\n                                 :options="separatorOptions"></sw-select-field>\n                <sw-select-field :label="$tc(\'sumedia-winestro.tasks.form.bottlingSeparator\')"\n                                 v-model:value="tasks.formData.articleNumberBottlingSeparator"\n                                 :options="separatorOptions"></sw-select-field>\n\n                <div>\n                    <div class="sumedia-winestro-task-switches">\n\n                        <strong>{{ $tc(\'sumedia-winestro.tasks.productImportTask.name\') }}</strong>\n\n                        <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.enabled.products.enabled\')"\n                                         v-model:value="tasks.formData.productimport" />\n\n                        <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.enabled.products.activestatus\')"\n                                         v-model:value="tasks.formData.activestatus" />\n\n                        <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.enabled.products.description\')"\n                                         v-model:value="tasks.formData.description" />\n\n                        <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.enabled.products.freeshipping\')"\n                                         v-model:value="tasks.formData.freeshipping" />\n\n                        <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.enabled.products.manufacturer\')"\n                                         v-model:value="tasks.formData.manufacturer" />\n\n                    </div>\n\n                    <div class="sumedia-winestro-task-switches">\n\n                        <strong>{{ $tc(\'sumedia-winestro.tasks.productImageUpdateTask.name\') }}</strong>\n\n                        <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.enabled.products.images\')"\n                                         v-model:value="tasks.formData.productimages" />\n\n                    </div>\n\n                    <div class="sumedia-winestro-task-switches">\n\n                        <strong>{{ $tc(\'sumedia-winestro.tasks.productStockTask.name\') }}</strong>\n\n                        <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.enabled.products.stockUpdate\')"\n                                         v-model:value="tasks.formData.productstock" />\n\n                    </div>\n\n                    <div class="sumedia-winestro-task-switches">\n\n                        <strong>{{ $tc(\'sumedia-winestro.tasks.productCategoryAssignmentTask.name\') }}</strong>\n\n                        <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.enabled.products.categories\')"\n                                         v-model:value="tasks.formData.categories" />\n\n                    </div>\n                    <br class="clear" />\n                </div>\n\n                <div>\n\n                    <div class="sumedia-winestro-tasks-switches">\n\n                        <strong>{{ $tc(\'sumedia-winestro.tasks.form.orderdata\') }}</strong>\n\n                        <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.enabled.orders.enabled\')"\n                                         v-model:value="tasks.formData.orderexport" />\n\n                        <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.enabled.orders.orderstatusupdate\')"\n                                         v-model:value="tasks.formData.orderstatusupdate" />\n\n                        <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.enabled.orders.sendWinestroEmail\')"\n                                         v-model:value="tasks.formData.sendWinestroEmail" />\n\n                    </div>\n\n                    <div class="sumedia-winestro-tasks-switches">\n\n                        <strong>{{ $tc(\'sumedia-winestro.tasks.form.newsletterdata\') }}</strong>\n\n                        <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.enabled.newsletter\')"\n                                         v-model:value="tasks.formData.newsletterReceiver" />\n                    </div>\n                    <br class="clear" />\n                </div>\n\n            </sw-card>\n\n            <sw-card :large="true">\n                <div class="right">\n                    <sw-button :isLoading="this.tasks.isLoading"\n                               :disabled="!isTasksComplete" variant="primary" @click="saveTasks">\n                        {{ $tc(\'sumedia-winestro.save\')}}\n                    </sw-button>\n                </div>\n                <br class="clear" />\n            </sw-card>\n\n        </div>\n\n        <div v-else>\n            <div class="sumedia-winestro-installation-loading">\n                <p>{{ $tc(\'sumedia-winestro.installation.done\') }}</p>\n            </div>\n        </div>\n\n    </template>\n\n{% endblock %}',inject:["sumediaWinestro"],mixins:[d.getByName("notification")],data(){return{isMigrationNeeded:!0}},async mounted(){!0===await this.sumediaWinestro.configService.get("migrationDone")&&(this.$parent.$parent.$parent.isMigrationNeeded=!1)},methods:{setMigrationDone(){this.sumediaWinestro.configService.set("migrationDone",!0),this.isMigrationNeeded=!1,this.$parent.$parent.$parent.isMigrationNeeded=!1}}}),s(316);let{Component:c}=Shopware;c.register("sumedia-winestro-loganalyzer",{template:'{% block sumedia_winestro_overview %}\n\n    <div class="sumedia-winestro-title">\n        <h2>{{ $tc(\'sumedia-winestro.overview.title\') }}</h2>\n        <br class="clear" />\n    </div>\n\n    <div v-if="isInstallationNeeded">\n        <sw-card :large="true">\n            <p>{{ $tc(\'sumedia-winestro.overview.needInstall\') }}</p><br />\n            <p>{{ $tc(\'sumedia-winestro.overview.needInstall2\') }}</p><br />\n            <br />\n            <a target="_blank" href="https://sumedia-webdesign.atlassian.net/wiki/spaces/WINESTRO/pages/1081396/Plugin+in+Version+2.x">\n                {{ $tc(\'sumedia-winestro.overview.toTheDocumentation\') }}\n            </a>\n        </sw-card>\n    </div>\n\n    <div v-if="!isInstallationNeeded">\n        <sw-card :large="true">\n            <a target="_blank" href="https://sumedia-webdesign.atlassian.net/wiki/spaces/WINESTRO/pages/1081396/Winestro+Cloud+Integration">\n                {{ $tc(\'sumedia-winestro.overview.toTheDocumentation\') }}\n            </a>\n        </sw-card>\n\n        <sw-card :large="true">\n            <h3>{{ $tc(\'sumedia-winestro.overview.taskLogTitle\') }}</h3>\n            <template v-for="item in log">\n                <div :class="[\'sumedia-winestro-overview-log\', item.type]">\n                    {{ item.text }}\n                </div>\n            </template>\n        </sw-card>\n\n    </div>\n\n{% endblock %}',inject:["sumediaWinestro"],data(){return{tasks:{},crons:{},log:[]}},mounted(){this.loadTasks().then(()=>{this.loadCrons().then(()=>{this.loadLog()})})},methods:{async loadTasks(){this.tasks=await this.sumediaWinestro.taskService.getTasks()},async loadCrons(){this.crons=await this.sumediaWinestro.configService.get("cron")},async loadLog(){let e=await this.sumediaWinestro.apiService.post("sumedia-winestro/processlog");if(e.success){let t=[];for(let s in e.lines){let n=e.lines[s],i=n.match(/\d{4}-(\d{2})-(\d{2})T(\d{2}:\d{2})/);if(void 0!==i[3]){let e=n.match(/((?:[a-zA-Z0-9]{13}-?)+)\]/);null!==e&&(e=e[1]);let s=n.match(/(cron|task)/);null!==s&&(s=s[1]);let a=n.match(/run ([a-z0-9]{32})\]/);null!==a&&(a=a[1]);let o=n.match("success");null!==o&&(o=!0),null!==n.match("failed")&&(o=!1),null!==e&&null!==s&&(void 0===t[e]&&(t[e]=[]),t[e].type=s,t[e].date=i[2]+"."+i[1]+" "+i[3],null!==a&&(t[e].id=a),null!==o&&(t[e].success=o))}}let s=0;for(let e in t)if(t[e].id&&("cron"===t[e].type&&"undefined"!==this.crons[e]||"task"===t[e].type&&"undefined"!==this.tasks[e])&&(this.log.push({text:t[e].date+" "+("cron"===t[e].type?this.crons[t[e].id].name:this.tasks[t[e].id].name)+" ("+("cron"===t[e].type?"Start":"Aufgabe")+")",type:t[e].success?"success":"failed"}),s++>50))break}},async downloadLogFiles(){let e=await this.sumediaWinestro.apiService.post("sumedia-winestro/logdownload");if(e.success){let t=location.href.indexOf("/admin")||location.href.indexOf("/#/"),s=location.href.substring(0,t);window.open(s+"/sumedia-winestro/log-token-download?token="+e.token,"_blank")}}}}),s(573);let{Component:m,Mixin:u,Utils:p,Context:h}=Shopware,{Criteria:f}=Shopware.Data;m.register("sumedia-winestro-connections",{template:'{% block sumedia_winestro_connections %}\n\n    <h2>{{ $tc(\'sumedia-winestro.connections.title\') }}</h2>\n\n    <sw-button-group class="sumedia-winestro-connections-actions">\n        <sw-button\n            @click="openCreate()"\n            variant="primary"\n        >\n            {{ $tc(\'sumedia-winestro.connections.add\') }}\n        </sw-button>\n    </sw-button-group>\n    <br />\n\n    <sw-modal v-if="create.isOpen" @modalClose="create.isOpen = false" :title="$tc(\'sumedia-winestro.connections.create.title\')">\n\n        <sw-text-field :label="$tc(\'sumedia-winestro.connections.form.name\')"\n                       :placeholder="$tc(\'sumedia-winestro.connections.form.fillsAutomatically\')"\n                       v-model:value="formData.name" required />\n\n        <sw-url-field :label="$tc(\'sumedia-winestro.connections.form.url\')"\n                      v-model:value="formData.url" required />\n\n        <sw-number-field :label="$tc(\'sumedia-winestro.connections.form.userId\')"\n                         v-model:value="formData.userId" required />\n\n        <sw-number-field :label="$tc(\'sumedia-winestro.connections.form.shopId\')"\n                         v-model:value="formData.shopId" required />\n\n        <sw-text-field :label="$tc(\'sumedia-winestro.connections.form.secretId\')"\n                       v-model:value="formData.secretId" required />\n\n        <sw-password-field :label="$tc(\'sumedia-winestro.connections.form.secretCode\')"\n                           v-model:value="formData.secretCode" required />\n\n        <template #modal-footer>\n\n            <sw-button @click="checkConnection">\n                {{ $tc(\'sumedia-winestro.connections.checkConnection.button\') }}\n            </sw-button>\n\n            <sw-button :disabled="!connectionCheckSuccessful" variant="primary" @click="setConnection">\n                {{ $tc(\'sumedia-winestro.save\')}}\n            </sw-button>\n\n        </template>\n\n    </sw-modal>\n\n    <sw-modal v-if="edit.isOpen" @modalClose="edit.isOpen = false" :title="$tc(\'sumedia-winestro.connections.edit.title\')">\n\n        <sw-text-field :label="$tc(\'sumedia-winestro.connections.form.name\')"\n                       :placeholder="$tc(\'sumedia-winestro.connections.form.fillsAutomatically\')"\n                       v-model:value="formData.name" required />\n\n        <sw-url-field :label="$tc(\'sumedia-winestro.connections.form.url\')"\n                      v-model:value="formData.url" required />\n\n        <sw-number-field :label="$tc(\'sumedia-winestro.connections.form.userId\')"\n                         v-model:value="formData.userId" required />\n\n        <sw-number-field :label="$tc(\'sumedia-winestro.connections.form.shopId\')"\n                         v-model:value="formData.shopId" required />\n\n        <sw-text-field :label="$tc(\'sumedia-winestro.connections.form.secretId\')"\n                       v-model:value="formData.secretId" required />\n\n        <sw-password-field :label="$tc(\'sumedia-winestro.connections.form.secretCode\')"\n                           v-model:value="formData.secretCode" required />\n\n        <template #modal-footer>\n\n            <sw-button @click="checkConnection">\n                {{ $tc(\'sumedia-winestro.connections.checkConnection.button\') }}\n            </sw-button>\n\n            <sw-button :disabled="!connectionCheckSuccessful" variant="primary" @click="setConnection">\n                {{ $tc(\'sumedia-winestro.save\')}}\n            </sw-button>\n\n        </template>\n\n    </sw-modal>\n\n    <sw-confirm-modal\n        v-if="this.delete.isOpen"\n        type="delete"\n        :text="$tc(\'sumedia-winestro.connections.delete.confirm\')"\n        @confirm="deleteConnection()"\n        @close="closeDelete()"\n        @cancel="closeDelete()">\n    </sw-confirm-modal>\n\n    <sw-data-grid :showSelection="false" class="sumedia-winestro-connections-grid" :dataSource="data" :columns="columns" :full-page="true">\n        <template #actions="{ item }">\n            <sw-context-menu-item\n                @click="openEdit(item.id)"\n            >\n                {{ $tc(\'sumedia-winestro.edit\') }}\n            </sw-context-menu-item><br />\n            <br />\n            <sw-context-menu-item\n                variant="danger"\n                @click="openDelete(item.id)"\n            >\n                {{ $tc(\'sumedia-winestro.delete\') }}\n            </sw-context-menu-item>\n        </template>\n    </sw-data-grid>\n\n{% endblock %}',inject:["sumediaWinestro"],mixins:[u.getByName("notification")],data(){return{winestroConnections:{},data:[],columns:[{property:"winestroId",label:this.$tc("sumedia-winestro.connections.winestroId")},{property:"winestroShopName",label:this.$tc("sumedia-winestro.connections.winestroShopName")}],formData:{id:null,name:null,url:"https://weinstore.net/xml/v20.0",userId:null,shopId:1,secretId:"api-usr",secretCode:null},checkSuccessful:!1,create:{isOpen:!1,isLoading:!1},delete:{isOpen:!1,isLoading:!1,id:null},edit:{isOpen:!1,isLoading:!1}}},mounted(){this.loadData()},computed:{connectionCheckSuccessful(){let e=this.checkedData,t=this.formData;return this.checkSuccessful&&(""===t.name||t.url!==e.url||t.userId!==e.userId||t.shopId!==e.shopId||t.secretId!==e.secretId||t.secretCode!==e.secretCode)?(this.checkSuccessful=!1,!1):this.checkSuccessful}},watch:{winestroConnections(){let e=[];for(let t in this.winestroConnections){let s=this.winestroConnections[t];e.push({id:t,winestroId:s.userId+"/"+s.shopId+"/"+s.secretId,winestroShopName:s.name})}this.data=e}},methods:{async loadData(){this.loadWinestroConnections()},async loadWinestroConnections(){this.winestroConnections=await this.sumediaWinestro.getWinestroConnections()},openCreate(){this.resetFormData(),this.create.isOpen=!0},openEdit(e){this.populateFormData(e),this.edit.isOpen=!0},openDelete(e){this.delete.id=e,this.delete.isOpen=!0},closeDelete(){this.delete.id=null,this.delete.isOpen=!1},resetFormData(){this.checkSuccessful=!1,this.formData={id:null,name:null,url:"https://weinstore.net/xml/v20.0",userId:null,shopId:1,secretId:"api-usr",secretCode:null}},populateFormData(e){this.checkSuccessful=!1,this.formData=this.winestroConnections[e]},async checkConnection(){this.create.isLoading=!0,this.edit.isLoading=!0,this.checkSuccessful=!1;let e=await this.sumediaWinestro.requestWinestroConnection(this.formData.url,this.formData.userId,this.formData.shopId,this.formData.secretId,this.formData.secretCode);e.success?((null===this.formData.name||""===this.formData.name)&&(this.formData.name=e.name),this.checkSuccessful=!0,this.checkedData={...this.formData},this.createNotificationSuccess({title:this.$tc("sumedia-winestro.connections.checkConnection.title"),message:this.$tc("sumedia-winestro.connections.checkConnection.success")})):this.createNotificationError({title:this.$tc("sumedia-winestro.connections.checkConnection.title"),message:e.message}),this.create.isLoading=!1,this.edit.isLoading=!1},async setConnection(){this.create.isLoading=!0,this.edit.isLoading=!0,null===this.formData.id&&(this.formData.id=this.sumediaWinestro.md5Service.md5(this.formData.userId+this.formData.shopId+this.formData.secretId),void 0!==this.winestroConnections[this.formData.id]&&(this.formData.id=p.createId())),await this.sumediaWinestro.setWinestroConnection(this.formData.id,this.formData.name,this.formData.url,this.formData.userId,this.formData.shopId,this.formData.secretId,this.formData.secretCode).then(()=>{this.create.isLoading=!1,this.create.isOpen=!1,this.edit.isOpen=!1,this.resetFormData(),this.createNotificationSuccess({title:this.$tc("sumedia-winestro.connections.create.notificationTitle"),message:this.$tc("sumedia-winestro.connections.create.notificationSuccess")}),this.loadWinestroConnections()})},async deleteConnection(){null!==this.delete.id&&(this.delete.isLoading=!0,await this.sumediaWinestro.removeWinestroConnection(this.delete.id).then(()=>{this.closeDelete(),this.createNotificationSuccess({title:this.$tc("sumedia-winestro.connections.delete.notificationTitle"),message:this.$tc("sumedia-winestro.connections.delete.notificationSuccess")}),this.loadWinestroConnections()}))}}}),s(967);let{Component:g,Mixin:w,Context:v}=Shopware,{Criteria:k}=Shopware.Data;g.register("sumedia-winestro-measurements",{template:'{% block sumedia_winestro_connections %}\n\n    <div class="sumedia-winestro-title">\n        <h2>{{ $tc(\'sumedia-winestro.measurements.title\') }}</h2>\n        <br class="clear" />\n    </div>\n\n    <sw-card :large="true" :isLoading="isLoading" :title="$tc(\'sumedia-winestro.measurements.title\')">\n\n        <template v-for="(item, key) in measurements">\n            <div class="label">\n                {{ $tc(\'sumedia-winestro.measurements.form.\' + key) }}\n                <div class="right">\n                    <sw-internal-link @click="createMeasurement(key)">{{ $tc(\'sumedia-winestro.createAutomatically\') }}</sw-internal-link>\n                </div>\n            </div>\n            <sw-entity-single-select v-model:value="formData[key]" entity="unit" required />\n        </template>\n\n        <div class="right">\n            <sw-button :isLoading="this.isLoading"\n                       :disabled="!isMeasurementsComplete" variant="primary" @click="saveMeasurements">\n                {{ $tc(\'sumedia-winestro.save\')}}\n            </sw-button>\n        </div>\n        <br class="clear" />\n\n    </sw-card>\n\n\n{% endblock %}',inject:["sumediaWinestro","repositoryFactory"],mixins:[w.getByName("notification")],data(){return{langEnId:null,langDeId:null,languageId:null,isLoading:!1,successful:!1,measurements:this.sumediaWinestro.measurementService.measurements,formData:{litre:null,kilo:null,gramperhundret:null,volumepercent:null}}},computed:{isMeasurementsComplete(){return!Object.values(this.formData).includes(null)}},mounted(){this.loadLanguage().then(()=>{this.loadMeasurementConfig()})},methods:{async getLanguageIdByCode(e){let t=this.repositoryFactory.create("locale"),s=this.repositoryFactory.create("language"),n=new k;return n.addFilter(k.equals("code",e)),await t.search(n,v.api).then(async e=>{if(!e.length)return null;{let t=new k;return t.addFilter(k.equals("localeId",e[0].id)),await s.search(t,v.api).then(e=>e.length?e[0].id:null)}})},async loadLanguage(){this.langEnId=await this.getLanguageIdByCode("en-GB"),this.langDeId=await this.getLanguageIdByCode("de-DE"),this.languageId=v.api.systemLanguageId},async loadMeasurementConfig(){let e=await this.sumediaWinestro.configService.get("measurements");if(null!==e&&Object.values(e).length){for(let t in e)this.formData[t]=e[t];for(let e in this.measurements)void 0===this.formData[e]&&(this.formData[e]=null);this.successful=!0}},async createMeasurement(e){if(void 0!==this.measurements[e]){let t=this.languageId===this.langEnId?this.measurements[e][0]:this.measurements[e][2],s=this.languageId===this.langEnId?this.measurements[e][1]:this.measurements[e][3];null===this.formData[e]&&(this.formData[e]=await this.sumediaWinestro.measurementService.createUnit(t,s))}},async saveMeasurements(){if(this.isLoading=!0,Object.values(this.formData).includes(null))return null;await this.sumediaWinestro.configService.set("measurements",this.formData),this.isLoading=!1,this.successful=!0,this.createNotificationSuccess({title:this.$tc("sumedia-winestro.measurements.notificationSuccessTitle"),message:this.$tc("sumedia-winestro.measurements.notificationSuccessMessage")})}}}),s(35);let{Component:b,Mixin:y,Context:D}=Shopware,{Criteria:S}=Shopware.Data;b.register("sumedia-winestro-properties",{template:'{% block sumedia_winestro_connections %}\n\n    <div class="sumedia-winestro-title">\n        <h2>{{ $tc(\'sumedia-winestro.properties.title\') }}</h2>\n        <br class="clear" />\n    </div>\n\n    <sw-card :large="true" :isLoading="isLoading" :title="$tc(\'sumedia-winestro.installation.properties.title\')">\n\n        <template v-for="(item, key) in properties">\n            <div class="label">\n                {{ $tc(\'sumedia-winestro.properties.form.\' + key) }}\n                <div class="right">\n                    <sw-internal-link @click="createProperty(key)">{{ $tc(\'sumedia-winestro.createAutomatically\') }}</sw-internal-link>\n                </div>\n            </div>\n            <sw-entity-single-select v-model:value="formData[key]" entity="property_group" required />\n        </template>\n\n        <div class="right">\n            <sw-button :isLoading="this.isLoading"\n                       :disabled="!isPropertiesComplete" variant="primary" @click="saveProperties">\n                {{ $tc(\'sumedia-winestro.save\')}}\n            </sw-button>\n        </div>\n        <br class="clear" />\n\n    </sw-card>\n\n\n{% endblock %}',inject:["sumediaWinestro","repositoryFactory"],mixins:[y.getByName("notification")],data(){return{langEnId:null,langDeId:null,languageId:null,isLoading:!1,successful:!1,properties:this.sumediaWinestro.propertyService.properties,formData:this.getPropertiesFormData()}},computed:{isPropertiesComplete(){return!Object.values(this.formData).includes(null)}},mounted(){this.loadLanguage().then(()=>{this.loadPropertiesConfig()})},methods:{getPropertiesFormData(){let e={};return Object.keys(this.sumediaWinestro.propertyService.properties).forEach(t=>{e[t]=null}),e},async getLanguageIdByCode(e){let t=this.repositoryFactory.create("locale"),s=this.repositoryFactory.create("language"),n=new S;return n.addFilter(S.equals("code",e)),await t.search(n,D.api).then(async e=>{if(!e.length)return null;{let t=new S;return t.addFilter(S.equals("localeId",e[0].id)),await s.search(t,D.api).then(e=>e.length?e[0].id:null)}})},async loadLanguage(){this.langEnId=await this.getLanguageIdByCode("en-GB"),this.langDeId=await this.getLanguageIdByCode("de-DE"),this.languageId=D.api.systemLanguageId},async loadPropertiesConfig(){let e=await this.sumediaWinestro.configService.get("properties");if(null!==e&&Object.values(e).length){for(let t in e)this.formData[t]=e[t];for(let e in this.properties)void 0===this.formData[e]&&(this.formData[e]=null);this.successful=!0}},async createProperty(e){if(void 0!==this.properties[e]){let t=this.languageId===this.langEnId?this.properties[e][0]:this.properties[e][1];null===this.formData[e]&&(this.formData[e]=await this.sumediaWinestro.propertyService.createPropertyGroup(t))}},async saveProperties(){if(this.isLoading=!0,Object.values(this.formData).includes(null))return null;await this.sumediaWinestro.configService.set("properties",this.formData),this.isLoading=!1,this.successful=!0,this.createNotificationSuccess({title:this.$tc("sumedia-winestro.properties.notificationSuccessTitle"),message:this.$tc("sumedia-winestro.properties.notificationSuccessMessage")})}}}),s(277);let{Component:C,Mixin:I,Context:x}=Shopware,{Criteria:T}=Shopware.Data;C.register("sumedia-winestro-salechannels",{template:'{% block sumedia_winestro_connections %}\n\n    <h2>{{ $tc(\'sumedia-winestro.salesChannels.title\') }}</h2>\n\n    <sw-button-group class="sumedia-winestro-salechannels-actions">\n        <sw-button\n            @click="openConfig()"\n            variant="primary"\n        >\n            {{ $tc(\'sumedia-winestro.salesChannels.config\') }}\n        </sw-button>\n    </sw-button-group>\n    <br />\n\n    <sw-modal v-if="config.isOpen" @modalClose="closeConfig()" :title="$tc(\'sumedia-winestro.salesChannels.edit\')">\n\n        <sw-entity-single-select :label="$tc(\'sumedia-winestro.salesChannels.form.salesChannel\')"\n            v-model:value="formData.salesChannelId"\n            :disabled="formData.salesChannelId"\n            entity="sales_channel" required />\n\n        <sw-select-field :label="$tc(\'sumedia-winestro.salesChannels.form.winestroConnectionName\')"\n                         :disabled="formData.winestroConnectionId"\n            v-model:value="formData.winestroConnectionId" :options="winestroConnectionOptions" required />\n\n        <div v-if="isConfigReady">\n\n            <table class="sumedia-winestro-table">\n                <tr>\n                    <th>{{ $tc(\'sumedia-winestro.payment.paymentMapping.payment\') }}</th>\n                    <th>{{ $tc(\'sumedia-winestro.payment.paymentMapping.winestro\') }}</th>\n                </tr>\n                <template v-for="(payment, id) in this.paymentMapping">\n                    <tr>\n                        <td>{{ payment.name }}</td>\n                        <td>\n                            <sw-select-field\n                                    v-model:value="this.formData.paymentMapping[payment.id]"\n                                    :options="winestroPaymentMappingOptions"></sw-select-field>\n                        </td>\n                    </tr>\n                </template>\n            </table>\n\n            <table class="sumedia-winestro-table">\n                <tr>\n                    <th>{{ $tc(\'sumedia-winestro.shipping.shippingMapping.shipping\') }}</th>\n                    <th>{{ $tc(\'sumedia-winestro.shipping.shippingMapping.winestro\') }}</th>\n                </tr>\n                <template v-for="(shipping, id) in this.shippingMapping">\n                    <tr>\n                        <td>{{ shipping.name }}</td>\n                        <td>\n                            <sw-select-field v-model:value="this.formData.shippingMapping[shipping.id]"\n                                             :options="winestroShippingMappingOptions"></sw-select-field>\n                        </td>\n                    </tr>\n                </template>\n            </table>\n\n        </div>\n\n        <template #modal-footer>\n\n            <sw-button variant="primary"\n                       :disabled="!isCompleted"\n                       @click="configSalesChannel()">\n                {{ $tc(\'sumedia-winestro.save\')}}\n            </sw-button>\n\n        </template>\n\n    </sw-modal>\n\n    <sw-confirm-modal\n        v-if="this.delete.isOpen"\n        type="delete"\n        :text="$tc(\'sumedia-winestro.salesChannels.delete.confirm\')"\n        @confirm="deleteDo()"\n        @close="closeDelete()"\n        @cancel="closeDelete()">\n    </sw-confirm-modal>\n\n    <sw-data-grid :showSelection="false" class="sumedia-winestro-salesChannels-grid" :dataSource="data" :columns="columns" :full-page="true">\n        <template #actions="{ item }">\n            <sw-context-menu-item\n                    @click="openEdit(item.id)"\n            >\n                {{ $tc(\'sumedia-winestro.edit\') }}\n            </sw-context-menu-item><br />\n            <br />\n            <sw-context-menu-item\n                    variant="danger"\n                    @click="openDelete(item.id)"\n            >\n                {{ $tc(\'sumedia-winestro.delete\') }}\n            </sw-context-menu-item>\n        </template>\n    </sw-data-grid>\n\n{% endblock %}',inject:["sumediaWinestro","repositoryFactory"],mixins:[I.getByName("notification")],data(){return{winestroConnections:{},winestroSalesChannels:{},winestroConnectionOptions:[],isMappingLoaded:!1,paymentMapping:[],winestroPaymentMapping:[],winestrpPaymentNameMapping:[],winestroPaymentMappingOptions:[],shippingMapping:[],winestroShippingMapping:[],winestroShippingMappingOptions:[],data:[],columns:[{property:"salesChannel",label:this.$tc("sumedia-winestro.salesChannels.form.salesChannel")},{property:"winestroConnectionName",label:this.$tc("sumedia-winestro.salesChannels.form.winestroConnectionName")}],config:{isOpen:!1,isLoading:!1},delete:{id:null,isOpen:!1},formData:{salesChannelId:null,winestroConnectionId:null,paymentMapping:{},shippingMapping:{}}}},mounted(){this.loadWinestroConnections().then(()=>{this.loadWinestroSalesChannels().then(async()=>{this.loadData()})})},computed:{isCompleted(){return this.formData.salesChannelId&&this.formData.winestroConnectionId&&!Object.values(this.formData.paymentMapping).includes(null)&&!Object.values(this.formData.shippingMapping).includes(null)},isConfigReady(){return!!this.formData.salesChannelId&&!!this.formData.winestroConnectionId&&(this.isMappingLoaded||(this.loadPaymentMapping().then(()=>{this.loadShippingMapping().then(()=>{this.checkMapping()})}),this.isMappingLoaded=!0),!0)}},watch:{winestroPaymentMapping(){let e=[];for(let t in this.winestroPaymentMapping){let s=this.winestroPaymentMapping[t];e.push({id:s,value:s,name:this.$tc("sumedia-winestro.payment-names."+t)})}this.winestroPaymentMappingOptions=e},winestroShippingMapping(){let e=[];for(let t in this.winestroShippingMapping){let s=this.winestroShippingMapping[t];e.push({id:s,value:s,name:this.$tc("sumedia-winestro.shipping-names."+t)})}this.winestroShippingMappingOptions=e}},methods:{async loadWinestroConnections(){this.winestroConnections=await this.sumediaWinestro.getWinestroConnections();let e=[];for(let t in this.winestroConnections)e.push({id:t,value:t,name:this.winestroConnections[t].name});this.winestroConnectionOptions=e},async loadWinestroSalesChannels(){this.winestroSalesChannels=await this.sumediaWinestro.getSalesChannels()},async loadPaymentMapping(){if(this.paymentMapping=[],this.formData.salesChannelId){let e=this.repositoryFactory.create("sales_channel"),t=new T;t.addAssociation("paymentMethods"),t.addFilter(T.equals("id",this.formData.salesChannelId)),e.search(t,x.api).then(e=>{if(e.length){let t=e[0].paymentMethods,s=[];t.forEach(e=>{s.push({id:e.id,name:e.name}),void 0===this.formData.paymentMapping[e.id]&&(this.formData.paymentMapping[e.id]=null)}),this.paymentMapping=s}})}this.sumediaWinestro.apiService.post("sumedia-winestro/mapping",{mapper:"PaymentConfigMapper"}).then(e=>{e.success&&(this.winestroPaymentMapping=e.mapping)})},async loadShippingMapping(){if(this.shippingMapping=[],this.formData.salesChannelId){let e=this.repositoryFactory.create("sales_channel"),t=new T;t.addAssociation("shippingMethods"),t.addFilter(T.equals("id",this.formData.salesChannelId)),e.search(t,x.api).then(e=>{if(e.length){let t=e[0].shippingMethods,s=[];t.forEach(e=>{s.push({id:e.id,name:e.name}),void 0===this.formData.shippingMapping[e.id]&&(this.formData.shippingMapping[e.id]=null)}),this.shippingMapping=s}})}this.sumediaWinestro.apiService.post("sumedia-winestro/mapping",{mapper:"ShippingConfigMapper"}).then(e=>{e.success&&(this.winestroShippingMapping=e.mapping)})},async loadData(){let e=[];for(let t in this.winestroSalesChannels){let s=this.winestroSalesChannels[t],n=await this.repositoryFactory.create("sales_channel").search((new T).addFilter(T.equals("id",t)),x.api).then(e=>e[0]);for(let i in s.winestroConnections){let s=this.winestroConnections[i];e.push({id:t+"-"+i,salesChannel:n.name,winestroConnectionName:s.name})}}this.data=e},openConfig(){this.resetFormData(),this.config.isOpen=!0},closeConfig(){this.config.isOpen=!1},openEdit(e){this.populateFormData(e),this.config.isOpen=!0},openDelete(e){this.delete.id=e,this.delete.isOpen=!0},closeDelete(){this.delete.id=null,this.delete.isOpen=!1},resetFormData(){this.formData={salesChannelId:null,winestroShopId:null,paymentMapping:{},shippingMapping:{}},this.isMappingLoaded=!1},populateFormData(e){let t=e.split("-"),s=t[0],n=t[1];this.formData={salesChannelId:s,winestroConnectionId:n,paymentMapping:{...this.formData.paymentMapping,...this.winestroSalesChannels[s].paymentMapping},shippingMapping:{...this.formData.shippingMapping,...this.winestroSalesChannels[s].shippingMapping}},this.isMappingLoaded=!1},checkMapping(){let e=this.formData.salesChannelId,t=this.formData.winestroConnectionId;if(e&&t){if(void 0!==this.winestroSalesChannels[e].winestroConnections[t]){let s=this.winestroSalesChannels[e].winestroConnections[t].paymentMapping,n=this.winestroSalesChannels[e].winestroConnections[t].shippingMapping;for(let e in s)this.formData.paymentMapping[e]=s[e];for(let e in n)this.formData.shippingMapping[e]=n[e]}}else{for(let e in this.formData.paymentMapping)this.formData.paymentMapping[e]=null;for(let e in this.formData.shippingMapping)this.formData.shippingMapping[e]=null}},async configSalesChannel(){if(this.config.successful=!1,this.config.isLoading=!0,!this.isCompleted)return null;let e=await this.sumediaWinestro.getSalesChannels(),t=null;for(let s in e=null===e?{}:e)s===this.formData.salesChannelId&&(t=s);let s=await this.repositoryFactory.create("sales_channel").search((new T).addFilter(T.equals("id",this.formData.salesChannelId)),x.api).then(e=>e[0]),n=null;null!==t?n=e[t]:(n=this.sumediaWinestro.salesChannel).salesChannelId=s.id,n.winestroConnections[this.formData.winestroConnectionId]={winestroConnectionId:this.formData.winestroConnectionId,paymentMapping:this.formData.paymentMapping,shippingMapping:this.formData.shippingMapping},await this.sumediaWinestro.setSalesChannel(this.formData.salesChannelId,n),this.config.isLoading=!1,this.config.successful=!0,this.config.isOpen=!1,this.resetFormData(),this.createNotificationSuccess({title:this.$tc("sumedia-winestro.salesChannels.notificationSaveSuccessTitle"),message:this.$tc("sumedia-winestro.salesChannels.notificationSaveSuccessMessage")}),this.loadWinestroSalesChannels().then(()=>{this.loadData()})},async deleteDo(){let e=this.delete.id.split("-"),t=e[0],s=e[1];await this.sumediaWinestro.removeSalesChannel(t,s),this.delete.isLoading=!1,this.delete.isOpen=!1,this.delete.id=null,this.createNotificationSuccess({title:this.$tc("sumedia-winestro.salesChannels.notificationDeleteSuccessTitle"),message:this.$tc("sumedia-winestro.salesChannels.notificationDeleteSuccessMessage")}),this.loadWinestroSalesChannels().then(()=>{this.loadWinestroSalesChannels().then(()=>{this.loadData()})})}}}),s(846);let{Component:E,Mixin:$,Utils:A,Context:M}=Shopware,{Criteria:P}=Shopware.Data;E.register("sumedia-winestro-tasks",{template:'{% block sumedia_winestro_connections %}\n\n    <h2>{{ $tc(\'sumedia-winestro.tasks.title\') }}</h2>\n\n    <sw-button-group class="sumedia-winestro-tasks-actions">\n        <sw-button\n                @click="openCreate()"\n                variant="primary"\n        >\n            {{ $tc(\'sumedia-winestro.tasks.add\') }}\n        </sw-button>\n    </sw-button-group>\n    <br />\n\n    <sw-data-grid :showSelection="false" class="sumedia-winestro-tasks-grid" :dataSource="data" :columns="columns" :full-page="true">\n        <template #actions="{ item }">\n            <sw-context-menu-item\n                    @click="openConfig(item.id)"\n            >\n                {{ $tc(\'sumedia-winestro.edit\') }}\n            </sw-context-menu-item>\n            <sw-context-menu-item\n                    @click="executeTask(item.id)"\n            >\n                {{ $tc(\'sumedia-winestro.execute\') }}\n            </sw-context-menu-item><br />\n            <br />\n            <sw-context-menu-item\n                    variant="danger"\n                    @click="openDelete(item.id)"\n            >\n                {{ $tc(\'sumedia-winestro.delete\') }}\n            </sw-context-menu-item>\n        </template>\n    </sw-data-grid>\n\n    <sw-confirm-modal\n        v-if="this.delete.isOpen"\n        type="delete"\n        :text="$tc(\'sumedia-winestro.tasks.delete.confirm\')"\n        @confirm="deleteTask()"\n        @close="closeDelete()"\n        @cancel="closeDelete()">\n    </sw-confirm-modal>\n\n    <sw-modal v-if="config.isOpen" @modalClose="closeConfig()" :title="$tc(\'sumedia-winestro.tasks.config.title\')">\n\n        <sw-select-field\n                :label="$tc(\'sumedia-winestro.tasks.form.type\')"\n                :disabled="this.formData.type"\n                v-model:value="formData.type"\n                :options="taskOptions"></sw-select-field>\n\n        <div v-if="formData.type === \'productImport\'">\n            <sw-select-field\n                    :label="$tc(\'sumedia-winestro.tasks.form.winestroShopName\')"\n                    :disabled="this.formData.productImport.winestroConnectionId"\n                    v-model:value="formData.productImport.winestroConnectionId"\n                    :options="winestroConnectionsOptions"></sw-select-field>\n            <sw-text-field :label="$tc(\'sumedia-winestro.tasks.form.name\')"\n                           v-model:value="formData.productImport.name" required />\n\n            <sw-entity-multi-id-select :label="$tc(\'sumedia-winestro.tasks.form.visibleInSalesChannelsIds\')"\n                                       v-model:value="formData.productImport.visibleInSalesChannelsIds"\n                                       :repository="salesChannelRepository" required />\n\n            <strong>{{ $tc(\'sumedia-winestro.tasks.form.articlenumber\') }}</strong><br />\n            <br />\n            <p>{{ $tc(\'sumedia-winestro.tasks.form.articlenumberDescription\') }}</p>\n            <br />\n            <sw-select-field :label="$tc(\'sumedia-winestro.tasks.form.articlenumber\')"\n                             v-model:value="formData.productImport.articleNumberFormat"\n                             :options="articleNumberFormatOptions"></sw-select-field>\n            <sw-select-field :label="$tc(\'sumedia-winestro.tasks.form.yearSeparator\')"\n                             v-model:value="formData.productImport.articleNumberYearSeparator"\n                             :options="separatorOptions"></sw-select-field>\n            <sw-select-field :label="$tc(\'sumedia-winestro.tasks.form.bottlingSeparator\')"\n                             v-model:value="formData.productImport.articleNumberBottlingSeparator"\n                             :options="separatorOptions"></sw-select-field>\n\n            <strong>{{ $tc(\'sumedia-winestro.tasks.form.generalData\') }}</strong><br />\n            <sw-entity-single-select :label="$tc(\'sumedia-winestro.tasks.form.defaultManufacturer\')"\n                                     v-model:value="formData.productImport.defaultManufacturer"\n                                     entity="product_manufacturer" required />\n            <sw-entity-single-select :label="$tc(\'sumedia-winestro.tasks.form.tax\')"\n                                     v-model:value="formData.productImport.tax"\n                                     entity="tax" required />\n            <sw-entity-single-select :label="$tc(\'sumedia-winestro.tasks.form.reducedTax\')"\n                                     v-model:value="formData.productImport.reducedTax"\n                                     entity="tax" required />\n            <sw-entity-single-select :label="$tc(\'sumedia-winestro.tasks.form.deliveryTime\')"\n                                     v-model:value="formData.productImport.deliveryTime"\n                                     entity="delivery_time" required />\n            <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.active\')"\n                             v-model:value="formData.productImport.enabled.enabled" />\n            <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.enabled.products.activestatus\')"\n                             v-model:value="formData.productImport.enabled.activestatus" />\n            <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.enabled.products.description\')"\n                             v-model:value="formData.productImport.enabled.description" />\n            <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.enabled.products.freeshipping\')"\n                             v-model:value="formData.productImport.enabled.freeshipping" />\n            <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.enabled.products.manufacturer\')"\n                             v-model:value="formData.productImport.enabled.manufacturer" />\n        </div>\n\n        <div v-if="formData.type === \'productImageUpdate\'">\n            <sw-select-field\n                    :label="$tc(\'sumedia-winestro.tasks.form.winestroShopName\')"\n                    :disabled="this.formData.productImageUpdate.winestroConnectionId"\n                    v-model:value="this.formData.productImageUpdate.winestroConnectionId"\n                    :options="winestroConnectionsOptions"></sw-select-field>\n            <sw-text-field :label="$tc(\'sumedia-winestro.tasks.form.name\')"\n                           v-model:value="formData.productImageUpdate.name" required />\n            <sw-entity-single-select :label="$tc(\'sumedia-winestro.tasks.form.mediaFolder\')"\n                                     v-model:value="formData.productImageUpdate.mediaFolder"\n                                     entity="media_folder" required />\n            <sw-number-field :label="$tc(\'sumedia-winestro.tasks.form.maxImageWidth\')"\n                             v-model:value="formData.productImageUpdate.maxImageWidth" required />\n            <sw-number-field :label="$tc(\'sumedia-winestro.tasks.form.maxImageHeight\')"\n                             v-model:value="formData.productImageUpdate.maxImageHeight" required />\n            <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.active\')"\n                             v-model:value="formData.productImageUpdate.enabled.enabled" />\n        </div>\n\n        <div v-if="formData.type === \'productStock\'">\n            <sw-select-field :label="$tc(\'sumedia-winestro.tasks.form.winestroShopName\')"\n                    :disabled="this.formData.productStock.winestroConnectionId"\n                    v-model:value="this.formData.productStock.winestroConnectionId"\n                    :options="winestroConnectionsOptions"></sw-select-field>\n            <sw-text-field :label="$tc(\'sumedia-winestro.tasks.form.name\')"\n                           v-model:value="formData.productStock.name" required />\n            <sw-number-field :label="$tc(\'sumedia-winestro.tasks.form.sellingLimit\')"\n                             v-model:value="formData.productStock.sellingLimit" required />\n            <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.active\')"\n                             v-model:value="formData.productStock.enabled.enabled" />\n        </div>\n\n        <div v-if="formData.type === \'productCategoryAssignment\'">\n            <sw-select-field :label="$tc(\'sumedia-winestro.tasks.form.winestroShopName\')"\n                             :disabled="this.formData.productCategoryAssignment.winestroConnectionId"\n                             v-model:value="this.formData.productCategoryAssignment.winestroConnectionId"\n                             :options="winestroConnectionsOptions"></sw-select-field>\n            <sw-text-field :label="$tc(\'sumedia-winestro.tasks.form.name\')"\n                           v-model:value="formData.productCategoryAssignment.name" required />\n            <sw-entity-single-select :label="$tc(\'sumedia-winestro.tasks.form.salesChannel\')"\n                                     v-model:value="formData.productCategoryAssignment.salesChannelId"\n                                     entity="sales_channel" required />\n            <sw-text-field :label="$tc(\'sumedia-winestro.tasks.form.categoryIdentifier\')"\n                           v-model:value="formData.productCategoryAssignment.categoryIdentifier" required />\n            <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.active\')"\n                             v-model:value="formData.productCategoryAssignment.enabled.enabled" />\n        </div>\n\n        <div v-if="formData.type === \'orderExport\'">\n            <sw-select-field :label="$tc(\'sumedia-winestro.tasks.form.winestroShopName\')"\n                             :disabled="this.formData.orderExport.winestroConnectionId"\n                             v-model:value="this.formData.orderExport.winestroConnectionId"\n                             :options="winestroConnectionsOptions"></sw-select-field>\n            <div v-if="formData.orderExport.winestroConnectionId">\n                <sw-entity-multi-id-select :label="$tc(\'sumedia-winestro.tasks.form.productsFromSalesChannelsIds\')"\n                                           v-model:value="formData.orderExport.productsFromSalesChannelsIds"\n                                           :repository="salesChannelRepository" required />\n                <sw-multi-select :label="$tc(\'sumedia-winestro.tasks.form.productsFromWinestroConnectionIds\')"\n                                 v-model:value="this.formData.orderExport.productsFromWinestroConnectionIds"\n                                 :options="winestroConnectionsOptions"></sw-multi-select>\n                <sw-text-field :label="$tc(\'sumedia-winestro.tasks.form.name\')"\n                               v-model:value="formData.orderExport.name" required />\n                <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.active\')"\n                                 v-model:value="formData.orderExport.enabled.enabled" />\n                <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.enabled.orders.sendWinestroEmail\')"\n                                 v-model:value="formData.orderExport.enabled.sendWinestroEmail" />\n            </div>\n        </div>\n\n        <div v-if="formData.type === \'orderStatusUpdate\'">\n            <sw-select-field :label="$tc(\'sumedia-winestro.tasks.form.winestroShopName\')"\n                             :disabled="this.formData.orderStatusUpdate.winestroConnectionId"\n                             v-model:value="this.formData.orderStatusUpdate.winestroConnectionId"\n                             :options="winestroConnectionsOptions"></sw-select-field>\n            <sw-text-field :label="$tc(\'sumedia-winestro.tasks.form.name\')"\n                           v-model:value="formData.orderStatusUpdate.name" required />\n            <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.suppressEmail\')"\n                             v-model:value="formData.orderStatusUpdate.suppressEmail" />\n            <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.active\')"\n                             v-model:value="formData.orderStatusUpdate.enabled.enabled" />\n\n        </div>\n\n        <div v-if="formData.type === \'newsletterReceiverImport\'">\n            <sw-select-field :label="$tc(\'sumedia-winestro.tasks.form.winestroShopName\')"\n                             :disabled="this.formData.newsletterReceiverImport.winestroConnectionId"\n                             v-model:value="this.formData.newsletterReceiverImport.winestroConnectionId"\n                             :options="winestroConnectionsOptions"></sw-select-field>\n            <sw-entity-single-select :label="$tc(\'sumedia-winestro.tasks.form.salesChannel\')"\n                                     v-model:value="formData.newsletterReceiverImport.salesChannelId"\n                                     entity="sales_channel" required />\n            <sw-text-field :label="$tc(\'sumedia-winestro.tasks.form.name\')"\n                           v-model:value="formData.newsletterReceiverImport.name" required />\n            <sw-switch-field :label="$tc(\'sumedia-winestro.tasks.form.active\')"\n                             v-model:value="formData.newsletterReceiverImport.enabled.enabled" />\n        </div>\n\n        <div v-if="formData.type" class="sumedia-winestro-tasks-execute">\n            <strong>{{ $tc(\'sumedia-winestro.tasks.form.executeTitle\') }}</strong><br />\n            <br />\n            <p>{{ $tc(\'sumedia-winestro.tasks.form.executeDescription\') }}</p>\n\n            <template v-for="(item, key) in this.formData[this.formData.type].execute">\n                <div class="executes">\n                    <div class="left">\n                        {{ this.tasks[item].name }}<br />\n                    </div>\n                    <div class="right">\n                        <sw-button variant="danger" @click="removeExecute(this.formData.type, this.tasks[item].id)">\n                            {{ $tc(\'sumedia-winestro.delete\')}}\n                        </sw-button>\n                    </div>\n                    <br class="clear" />\n                </div>\n            </template>\n\n            <div class="execute-add">\n                <div class="left">\n                    <sw-select-field v-model:value="formData.executeId"\n                            :criteria="executeCriteria"\n                            :options="filteredTasksOptions"></sw-select-field>\n                </div>\n                <div class="right">\n                    <sw-button :disabled="!this.formData.executeId" variant="default" @click="addExecute(this.formData.type, this.formData.executeId)">\n                        {{ $tc(\'sumedia-winestro.add\')}}\n                    </sw-button>\n                </div>\n                <br class="clear" />\n            </div>\n\n        </div>\n\n        <template #modal-footer>\n\n            <sw-button :disabled="!isTaskComplete" variant="primary" @click="saveTask(this.formData.type)">\n                {{ $tc(\'sumedia-winestro.save\')}}\n            </sw-button>\n\n        </template>\n\n    </sw-modal>\n\n\n\n{% endblock %}',inject:["sumediaWinestro","repositoryFactory"],mixins:[$.getByName("notification")],data(){return{tasks:{},tasksOptions:[],extensions:{},extensionsOptions:[],extensionOptions:[{id:"productStockAdder",value:"productStockAdder",name:this.$tc("sumedia-winestro.tasks.extensionNames.productStockAdder")}],taskOptions:[{id:"productImport",value:"productImport",name:this.$tc("sumedia-winestro.tasks.taskNames.productImport")},{id:"productImageUpdate",value:"productImageUpdate",name:this.$tc("sumedia-winestro.tasks.taskNames.productImageUpdate")},{id:"productStock",value:"productStock",name:this.$tc("sumedia-winestro.tasks.taskNames.productStock")},{id:"productCategoryAssignment",value:"productCategoryAssignment",name:this.$tc("sumedia-winestro.tasks.taskNames.productCategoryAssignment")},{id:"orderExport",value:"orderExport",name:this.$tc("sumedia-winestro.tasks.taskNames.orderExport")},{id:"orderStatusUpdate",value:"orderStatusUpdate",name:this.$tc("sumedia-winestro.tasks.taskNames.orderStatusUpdate")},{id:"newsletterReceiverImport",value:"newsletterReceiverImport",name:this.$tc("sumedia-winestro.tasks.taskNames.newsletterReceiverImport")}],winestroConnections:{},winestroConnectionsOptions:[],articleNumberFormatOptions:[{id:"[articlenumber+year+bottling]",value:"[articlenumber+year+bottling]",name:this.$tc("sumedia-winestro.tasks.form.articlenumber")+" und "+this.$tc("sumedia-winestro.tasks.form.year")+" und "+this.$tc("sumedia-winestro.tasks.form.bottling")},{id:"[articlenumber+year]",value:"[articlenumber+year]",name:this.$tc("sumedia-winestro.tasks.form.articlenumber")+" und "+this.$tc("sumedia-winestro.tasks.form.year")+" ohne "+this.$tc("sumedia-winestro.tasks.form.bottling")},{id:"[articlenumber]",value:"[articlenumber]",name:this.$tc("sumedia-winestro.tasks.form.articlenumber")+" ohne "+this.$tc("sumedia-winestro.tasks.form.year")+" ohne "+this.$tc("sumedia-winestro.tasks.form.bottling")}],separatorOptions:[{id:" ",value:" ",name:"Leerzeichen"},{id:"+",value:"+",name:"+"},{id:"-",value:"-",name:"-"},{id:"/",value:"/",name:"/"}],data:[],columns:[{property:"active",label:this.$tc("sumedia-winestro.tasks.listing.active")},{property:"task",label:this.$tc("sumedia-winestro.tasks.listing.task")},{property:"name",label:this.$tc("sumedia-winestro.tasks.listing.name")},{property:"winestroShopName",label:this.$tc("sumedia-winestro.tasks.listing.winestroShopName")}],config:{isLoading:!1,isOpen:!1},delete:{isLoading:!1,isOpen:!1,id:null},formData:{type:null,executeId:null,productImport:{...this.sumediaWinestro.taskService.tasks.productImportTask,id:A.createId()},productImageUpdate:{...this.sumediaWinestro.taskService.tasks.productImageUpdateTask,id:A.createId()},productStock:{...this.sumediaWinestro.taskService.tasks.productStockTask,id:A.createId()},productCategoryAssignment:{...this.sumediaWinestro.taskService.tasks.productCategoryAssignmentTask,id:A.createId()},orderExport:{...this.sumediaWinestro.taskService.tasks.orderExportTask,id:A.createId()},orderStatusUpdate:{...this.sumediaWinestro.taskService.tasks.orderStatusUpdateTask,id:A.createId()},newsletterReceiverImport:{...this.sumediaWinestro.taskService.tasks.newsletterReceiverImportTask,id:A.createId()}}}},mounted(){this.loadWinestroConnections().then(()=>{this.loadTasks()})},computed:{isTaskComplete(){switch(this.formData.type){case"productImport":return""!==this.formData.productImport.name&&null!==this.formData.productImport.name&&null!==this.formData.productImport.winestroConnectionId&&null!==this.formData.productImport.defaultManufacturer&&null!==this.formData.productImport.tax&&null!==this.formData.productImport.reducedTax&&this.formData.productImport.visibleInSalesChannelsIds.length&&null!==this.formData.productImport.deliveryTime;case"productImageUpdate":return""!==this.formData.productImageUpdate.name&&null!==this.formData.productImageUpdate.name&&null!==this.formData.productImageUpdate.winestroConnectionId&&null!==this.formData.productImageUpdate.mediaFolder&&null!==this.formData.productImageUpdate.maxImageWidth&&null!==this.formData.productImageUpdate.maxImageHeight;case"productStock":return""!==this.formData.productStock.name&&null!==this.formData.productStock.name&&null!==this.formData.productStock.winestroConnectionId&&0<=this.formData.productStock.sellingLimit;case"productCategoryAssignment":return""!==this.formData.productCategoryAssignment.name&&null!==this.formData.productCategoryAssignment.name&&null!==this.formData.productCategoryAssignment.winestroConnectionId&&null!==this.formData.productCategoryAssignment.categoryIdentifier&&""!==this.formData.productCategoryAssignment.categoryIdentifier&&null!==this.formData.productCategoryAssignment.salesChannelId;case"orderExport":return""!==this.formData.orderExport.name&&null!==this.formData.orderExport.name&&null!==this.formData.orderExport.winestroConnectionId&&null!==this.formData.orderExport.productsFromWinestroConnectionIds&&this.formData.orderExport.productsFromWinestroConnectionIds.length&&null!==this.formData.orderExport.productsFromSalesChannelsIds&&this.formData.orderExport.productsFromSalesChannelsIds.length;case"orderStatusUpdate":return""!==this.formData.orderStatusUpdate.name&&null!==this.formData.orderStatusUpdate.name&&null!==this.formData.orderStatusUpdate.winestroConnectionId;case"newsletterReceiverImport":return""!==this.formData.newsletterReceiverImport.name&&null!==this.formData.newsletterReceiverImport.name&&null!==this.formData.newsletterReceiverImport.salesChannelId&&null!==this.formData.newsletterReceiverImport.winestroConnectionId}return!1},salesChannelRepository(){return this.repositoryFactory.create("sales_channel")},filteredTasksOptions(){let e=this.getInvalidTaskIds(this.formData[this.formData.type].id);return this.tasksOptions.filter(t=>!e.includes(t.id))}},watch:{tasks(){let e=[];for(let t in this.tasks)e.push({id:t,value:t,active:this.tasks[t].enabled.enabled?this.$tc("sumedia-winestro.yes"):this.$tc("sumedia-winestro.no"),task:this.$tc("sumedia-winestro.tasks.taskNames."+this.tasks[t].type),name:this.tasks[t].name,winestroShopName:this.winestroConnections[this.tasks[t].winestroConnectionId].name});this.data=e;let t=[];for(let e in this.tasks)t.push({id:e,value:e,name:this.tasks[e].name});this.tasksOptions=t},winestroConnections(){let e=[];for(let t in this.winestroConnections)e.push({id:t,value:t,name:this.winestroConnections[t].name,label:this.winestroConnections[t].name});this.winestroConnectionsOptions=e}},methods:{async loadWinestroConnections(){this.winestroConnections=await this.sumediaWinestro.getWinestroConnections()},async loadTasks(){this.tasks=await this.sumediaWinestro.taskService.getTasks()},getInvalidTaskIds(e){let t=[e];if(void 0!==this.tasks[e])for(let s in this.tasks[e].execute)this.tasks[e].execute[s].execute?t={...t,...this.getInvalidTaskIds(executeTaskId)}:t.push(this.tasks[e].execute[s]);return t},resetFormData(){this.formData={type:null,productImport:{...this.sumediaWinestro.taskService.tasks.productImportTask,id:A.createId()},productImageUpdate:{...this.sumediaWinestro.taskService.tasks.productImageUpdateTask,id:A.createId()},productStock:{...this.sumediaWinestro.taskService.tasks.productStockTask,id:A.createId()},productCategoryAssignment:{...this.sumediaWinestro.taskService.tasks.productCategoryAssignmentTask,id:A.createId()},orderExport:{...this.sumediaWinestro.taskService.tasks.orderExportTask,id:A.createId()},orderStatusUpdate:{...this.sumediaWinestro.taskService.tasks.orderStatusUpdateTask,id:A.createId()},newsletterReceiverImport:{...this.sumediaWinestro.taskService.tasks.newsletterReceiverImportTask,id:A.createId()}}},populateFormData(e){let t=this.tasks[e];this.formData[t.type]=t},openConfig(e){this.config.isOpen=!0,this.formData.type=this.tasks[e].type,this.populateFormData(e)},openCreate(){this.resetFormData(),this.config.isOpen=!0},closeConfig(){this.config.isOpen=!1,this.formData.type=null,this.formData.executeId=null,this.resetFormData()},openDelete(e){this.delete.id=e,this.delete.isOpen=!0},closeDelete(){this.delete.id=null,this.delete.isOpen=!1},async deleteTask(){await this.sumediaWinestro.taskService.removeTask(this.delete.id),this.createNotificationSuccess({title:this.$tc("sumedia-winestro.tasks.notificationTaskDeletedTitle"),message:this.$tc("sumedia-winestro.tasks.notificationTaskDeletedMessage")}),this.closeDelete(),this.loadTasks()},async saveTask(e){if(!this.isTaskComplete)return null;this.config.isLoading=!0;let t=this.formData[e],s=this.formData[e].id;await this.sumediaWinestro.taskService.setTask(s,t),this.config.isLoading=!1,this.config.isOpen=!1,this.resetFormData(),this.createNotificationSuccess({title:this.$tc("sumedia-winestro.tasks.notificationTaskSavedTitle"),message:this.$tc("sumedia-winestro.tasks.notificationTaskSavedMessage")}),this.loadTasks()},addExecute(e,t){let s=!1;this.formData[e].execute.forEach(e=>{e===t&&(s=!0)}),s||this.formData[e].execute.push(t),this.formData.executeId=null},removeExecute(e,t){let s=[];this.formData[e].execute.forEach(e=>{e!==t&&s.push(e)}),this.formData[e].execute=s},async executeTask(e){let t=await this.sumediaWinestro.configService.get("execute")||[];if(t.length||(t=[]),t.includes(e)){this.createNotificationError({title:this.$tc("sumedia-winestro.tasks.notificationTaskExecuteDuplicateTitle"),message:this.$tc("sumedia-winestro.tasks.notificationTaskExecuteDuplicateMessage")});return}t.push(e),this.sumediaWinestro.configService.set("execute",t),this.createNotificationSuccess({title:this.$tc("sumedia-winestro.tasks.notificationTaskExecuteTitle"),message:this.$tc("sumedia-winestro.tasks.notificationTaskExecuteMessage")})}}}),s(269);let{Component:N,Mixin:L,Utils:W,Context:_}=Shopware,{Criteria:O}=Shopware.Data;N.register("sumedia-winestro-tasks-extensions",{template:'{% block sumedia_winestro_connections %}\n\n    <h2>{{ $tc(\'sumedia-winestro.tasks-extensions.title\') }}</h2>\n\n    <sw-button-group class="sumedia-winestro-tasks-extensions-actions">\n        <sw-button\n                @click="openConfig()"\n                variant="primary"\n        >\n            {{ $tc(\'sumedia-winestro.tasks-extensions.add\') }}\n        </sw-button>\n    </sw-button-group>\n    <br />\n\n    <sw-data-grid :showSelection="false" class="sumedia-winestro-tasks-extensions-grid" :dataSource="data" :columns="columns" :full-page="true">\n        <template #actions="{ item }">\n            <sw-context-menu-item\n                    @click="openConfig(item.id)"\n            >\n                {{ $tc(\'sumedia-winestro.edit\') }}\n            </sw-context-menu-item><br />\n            <br />\n            <sw-context-menu-item\n                    variant="danger"\n                    @click="openDelete(item.id)"\n            >\n                {{ $tc(\'sumedia-winestro.delete\') }}\n            </sw-context-menu-item>\n        </template>\n    </sw-data-grid>\n\n    <sw-confirm-modal\n        v-if="this.delete.isOpen"\n        type="delete"\n        :text="$tc(\'sumedia-winestro.tasks-extensions.delete.confirm\')"\n        @confirm="deleteExtension()"\n        @close="closeDelete()"\n        @cancel="closeDelete()">\n    </sw-confirm-modal>\n\n    <sw-modal v-if="config.isOpen" @modalClose="closeConfig()" :title="$tc(\'sumedia-winestro.tasks-extensions.config.title\')">\n\n        <sw-select-field\n                :label="$tc(\'sumedia-winestro.tasks-extensions.form.type\')"\n                :disabled="this.formData.type"\n                v-model:value="formData.type"\n                :options="extensionsOptions"></sw-select-field>\n\n        <div v-if="formData.type === \'productStockAdder\'">\n            <sw-select-field\n                    :label="$tc(\'sumedia-winestro.tasks-extensions.form.task\')"\n                    :disabled="this.formData.productStockAdder.taskId"\n                    v-model:value="formData.productStockAdder.taskId"\n                    :options="tasksOptions"></sw-select-field>\n            <sw-select-field\n                    :label="$tc(\'sumedia-winestro.tasks.form.winestroShopName\')"\n                    :disabled="this.formData.productStockAdder.winestroConnectionId"\n                    v-model:value="formData.productStockAdder.winestroConnectionId"\n                    :options="winestroConnectionsOptions"></sw-select-field>\n            <sw-text-field :label="$tc(\'sumedia-winestro.tasks-extensions.form.name\')"\n                           v-model:value="formData.productStockAdder.name" required></sw-text-field>\n            <sw-switch-field :label="$tc(\'sumedia-winestro.tasks-extensions.form.active\')"\n                             v-model:value="formData.productStockAdder.enabled.enabled" />\n        </div>\n\n        <template #modal-footer>\n\n            <sw-button :disabled="!isExtensionComplete" variant="primary" @click="saveExtension(this.formData.type)">\n                {{ $tc(\'sumedia-winestro.save\')}}\n            </sw-button>\n\n        </template>\n\n    </sw-modal>\n\n{% endblock %}',inject:["sumediaWinestro","repositoryFactory"],mixins:[L.getByName("notification")],data(){return{winestroConnections:{},winestroConnectionsOptions:[],extensionsOptions:[{id:"productStockAdder",value:"productStockAdder",name:this.$tc("sumedia-winestro.tasks-extensions.extensionsNames.productStockAdder")}],tasks:{},tasksOptions:[],data:[],columns:[{property:"active",label:this.$tc("sumedia-winestro.tasks-extensions.listing.active")},{property:"task",label:this.$tc("sumedia-winestro.tasks-extensions.listing.task")},{property:"name",label:this.$tc("sumedia-winestro.tasks-extensions.listing.name")},{property:"winestroShopName",label:this.$tc("sumedia-winestro.tasks-extensions.listing.winestroShopName")}],config:{isLoading:!1,isOpen:!1},delete:{isOpen:!1,id:null},formData:{type:null,productStockAdder:{...this.sumediaWinestro.taskService.extensions.productStockAdder,id:W.createId()}}}},mounted(){this.loadWinestroConnections().then(()=>{this.loadTasks()})},watch:{winestroConnections(){let e=[];for(let t in this.winestroConnections)e.push({id:t,value:t,name:this.winestroConnections[t].name});this.winestroConnectionsOptions=e},tasks(){let e=[],t=[];for(let s in this.tasks)for(let n in t.push({id:s,value:s,name:this.tasks[s].name}),this.tasks[s].extensions)e.push({id:s+"-"+n,value:n,active:this.tasks[s].extensions[n].enabled.enabled?this.$tc("sumedia-winestro.yes"):this.$tc("sumedia-winestro.no"),task:this.tasks[s].name,name:this.tasks[s].extensions[n].name,winestroShopName:this.winestroConnections[this.tasks[s].extensions[n].winestroConnectionId].name});this.tasksOptions=t,this.data=e}},computed:{isExtensionComplete(){return"productStockAdder"===this.formData.type&&""!==this.formData.productStockAdder.name&&null!==this.formData.productStockAdder.name&&null!==this.formData.productStockAdder.winestroConnectionId}},methods:{async loadWinestroConnections(){this.winestroConnections=await this.sumediaWinestro.getWinestroConnections()},async loadTasks(){this.tasks=await this.sumediaWinestro.taskService.getTasks()},resetFormData(){this.formData={type:null,productStockAdder:{...this.sumediaWinestro.taskService.extensions.productStockAdder,id:W.createId()}}},populateFormData(e){let t=e.split("-"),s=t[0],n=t[1],i=this.tasks[s].extensions[n].type;this.formData.type=i,this.formData[i]=this.tasks[s].extensions[n]},openConfig(e){this.config.isOpen=!0,e&&this.populateFormData(e)},closeConfig(){this.config.isOpen=!1,this.resetFormData()},async saveExtension(e){if(!this.isExtensionComplete)return null;this.config.isLoading=!0;let t=this.formData[e].id,s=this.formData[e].taskId,n=await this.sumediaWinestro.taskService.getTask(s);null!==n&&(Array.isArray(n.extensions)&&!n.extensions.length&&(n.extensions={}),n.extensions[t]=this.formData[e],await this.sumediaWinestro.taskService.setTask(s,n),this.config.isLoading=!1,this.config.isOpen=!1,this.resetFormData(),this.createNotificationSuccess({title:this.$tc("sumedia-winestro.tasks-extensions.notificationExtensionSavedTitle"),message:this.$tc("sumedia-winestro.tasks-extensions.notificationExtensionSavedMessage")}),this.loadTasks())},openDelete(e){this.delete.id=e,this.delete.isOpen=!0},closeDelete(){this.delete.id=null,this.delete.isOpen=!1},async deleteExtension(){this.delete.isLoading=!0;let e=this.delete.id.split("-"),t=e[0],s=e[1],n=await this.sumediaWinestro.taskService.getTask(t);if(null===n)return;let i={};for(let e in n.extensions)e!==s&&(i[e]=n.extensions[e]);n.extensions=i,await this.sumediaWinestro.taskService.setTask(t,n),this.delete.isLoading=!1,this.delete.isOpen=!1,this.delete.id=null,this.createNotificationSuccess({title:this.$tc("sumedia-winestro.tasks-extensions.notificationExtensionDeletedTitle"),message:this.$tc("sumedia-winestro.tasks-extensions.notificationExtensionDeletedMessage")}),this.loadTasks()}}}),s(74);let{Component:F,Mixin:U,Utils:R}=Shopware;F.register("sumedia-winestro-cron",{template:'{% block sumedia_winestro_connections %}\n\n    <h2>{{ $tc(\'sumedia-winestro.cron.title\') }}</h2>\n\n    <sw-button-group class="sumedia-winestro-cron-actions">\n        <sw-button\n                @click="openConfig()"\n                variant="primary"\n        >\n            {{ $tc(\'sumedia-winestro.cron.add\') }}\n        </sw-button>\n    </sw-button-group>\n    <br />\n\n    <sw-data-grid :showSelection="false" class="sumedia-winestro-cron-grid" :dataSource="data" :columns="columns" :full-page="true">\n        <template #actions="{ item }">\n            <sw-context-menu-item\n                    @click="openConfig(item.id)"\n            >\n                {{ $tc(\'sumedia-winestro.edit\') }}\n            </sw-context-menu-item><br />\n            <br />\n            <sw-context-menu-item\n                    variant="danger"\n                    @click="openDelete(item.id)"\n            >\n                {{ $tc(\'sumedia-winestro.delete\') }}\n            </sw-context-menu-item>\n        </template>\n    </sw-data-grid>\n\n    <sw-confirm-modal\n        v-if="this.delete.isOpen"\n        type="delete"\n        :text="$tc(\'sumedia-winestro.cron.delete.confirm\')"\n        @confirm="deleteCron()"\n        @close="closeDelete()"\n        @cancel="closeDelete()">\n    </sw-confirm-modal>\n\n    <sw-modal v-if="config.isOpen" @modalClose="closeConfig()" :title="$tc(\'sumedia-winestro.cron.title\')">\n\n        <sw-select-field\n                :label="$tc(\'sumedia-winestro.cron.form.task\')"\n                :disabled="formData.taskId"\n                v-model:value="formData.taskId"\n                :options="tasksOptions" required></sw-select-field>\n\n        <sw-select-field\n                :label="$tc(\'sumedia-winestro.cron.form.times\')"\n                v-model:value="formData.times"\n                :options="timesOptions" required></sw-select-field>\n\n        <sw-text-field :label="$tc(\'sumedia-winestro.cron.form.name\')" v-model:value="formData.name" required />\n\n        <sw-switch-field :label="$tc(\'sumedia-winestro.cron.form.enabled.enabled\')"\n                         v-model:value="formData.enabled.enabled" />\n\n        <template #modal-footer>\n\n            <sw-button :disabled="!isCronComplete" variant="primary" @click="saveCron()">\n                {{ $tc(\'sumedia-winestro.save\')}}\n            </sw-button>\n\n        </template>\n\n    </sw-modal>\n\n{% endblock %}',inject:["sumediaWinestro"],mixins:[U.getByName("notification")],data(){return{crons:{},timesOptions:[{id:"5m",value:"5m",name:this.$tc("sumedia-winestro.cron.times.5m")},{id:"15m",value:"15m",name:this.$tc("sumedia-winestro.cron.times.15m")},{id:"30m",value:"30m",name:this.$tc("sumedia-winestro.cron.times.30m")},{id:"1h",value:"1h",name:this.$tc("sumedia-winestro.cron.times.1h")},{id:"6h",value:"6h",name:this.$tc("sumedia-winestro.cron.times.6h")},{id:"12h",value:"12h",name:this.$tc("sumedia-winestro.cron.times.12h")},{id:"1d",value:"1d",name:this.$tc("sumedia-winestro.cron.times.1d")},{id:"1w",value:"1w",name:this.$tc("sumedia-winestro.cron.times.1w")},{id:"1m",value:"1m",name:this.$tc("sumedia-winestro.cron.times.1m")}],tasks:{},tasksOptions:[],data:[],columns:[{property:"active",label:this.$tc("sumedia-winestro.cron.listing.active")},{property:"times",label:this.$tc("sumedia-winestro.cron.listing.times")},{property:"name",label:this.$tc("sumedia-winestro.cron.listing.name")},{property:"task",label:this.$tc("sumedia-winestro.cron.listing.task")}],config:{isLoading:!1,isOpen:!1},delete:{isOpen:!1,id:null},formData:{id:R.createId(),times:null,name:null,taskId:null,enabled:{enabled:!0}}}},mounted(){this.loadTaskConfig().then(()=>{this.loadCronConfig()})},watch:{crons(){let e=[];for(let t in this.crons)e.push({id:t,value:t,active:this.crons[t].enabled.enabled?this.$tc("sumedia-winestro.yes"):this.$tc("sumedia-winestro.no"),times:this.$tc("sumedia-winestro.cron.times."+this.crons[t].times),name:this.crons[t].name,task:this.tasks[this.crons[t].taskId].name});this.data=e},tasks(){let e=[];for(let t in this.tasks)e.push({id:t,value:t,name:this.tasks[t].name});this.tasksOptions=e}},computed:{isCronComplete(){return""!==this.formData&&null!==this.formData}},methods:{async loadCronConfig(){this.crons=await this.sumediaWinestro.configService.get("cron")},async loadTaskConfig(){this.tasks=await this.sumediaWinestro.taskService.getTasks()},resetFormData(){this.formData={id:R.createId(),times:null,name:null,taskId:null,enabled:{enabled:!0}}},populateFormData(e){this.formData=this.crons[e]},openConfig(e){this.config.isOpen=!0,e&&this.populateFormData(e)},closeConfig(){this.config.isOpen=!1,this.resetFormData()},async saveCron(){if(!this.isCronComplete)return null;this.config.isLoading=!0;let e=await this.sumediaWinestro.configService.get("cron")||{};e[this.formData.id]=this.formData,await this.sumediaWinestro.configService.set("cron",e),this.config.isLoading=!1,this.config.isOpen=!1,this.resetFormData(),this.createNotificationSuccess({title:this.$tc("sumedia-winestro.cron.notificationExtensionSavedTitle"),message:this.$tc("sumedia-winestro.cron.notificationExtensionSavedMessage")}),this.loadCronConfig()},openDelete(e){this.delete.id=e,this.delete.isOpen=!0},closeDelete(){this.delete.id=null,this.delete.isOpen=!1},async deleteCron(){this.delete.isLoading=!0;let e=await this.sumediaWinestro.configService.get("cron"),t={};for(let s in e)s!==this.delete.id&&(t[s]=e[s]);await this.sumediaWinestro.configService.set("cron",t),this.delete.isLoading=!1,this.delete.isOpen=!1,this.delete.id=null,this.createNotificationSuccess({title:this.$tc("sumedia-winestro.cron.notificationExtensionDeletedTitle"),message:this.$tc("sumedia-winestro.cron.notificationExtensionDeletedMessage")}),this.loadCronConfig()}}});var Y=JSON.parse('{"sumedia-winestro":{"createAutomatically":"Automatisch anlegen","save":"Speichern","add":"Hinzuf\xfcgen","edit":"Bearbeiten","execute":"Ausf\xfchren","delete":"L\xf6schen","yes":"Ja","no":"Nein","active":"Aktiviert","inactive":"Deaktiviert","title":"Winestro Cloud Integration","description":"winestro.cloud Integration zur Synchronisierung mit Shopware","tabs":{"overview":"\xdcbersicht","installation":"Installation","migration":"Migration","loganalyzer":"Aufgabenprotokoll","connections":"Verbindungen","measurements":"Ma\xdfeinheiten","properties":"Produkteigenschaften","saleChannels":"Verkaufskan\xe4le","tasks":"Aufgaben planen","tasks-extensions":"Aufgaben erweitern","cron":"Prozessausf\xfchrung","logdownload":"Log Download"},"overview":{"title":"\xdcbersicht","welcomeTitle":"Willkommen zur Winestro Cloud Integration","welcomeText":"Verbinden Sie Ihren winestro.cloud Account mit Shopware.","welcomeText2":"Der Installationsassistent legt Ihnen ein Standardsetup an, das f\xfcr viele Anwendungsf\xe4lle gen\xfcgen sollte, dennoch lassen sich mit Winestro Cloud Integration auch komplexere Zusammenh\xe4nge abbilden.","welcomeText3":"Sollte Ihnen Funktionalit\xe4t fehlen oder Sie Support ben\xf6tigen, z\xf6gern Sie nicht, sich zu melden.","welcomeText4":"Ich danke recht herzlich f\xfcr die Nutzung meines Produkts und w\xfcnsche Ihnen viel Erfolg.","needInstallTitle":"Installation erforderlich","needInstall":"Ihre Winestro Cloud Integration ist noch nicht betriebsbereit.","needInstall2":"Bitte f\xfchren Sie den Installationsassistenen zur Ersteinrichtung aus.","needMigrationTitle":"Migration erforderlich","needMigration":"Ihre Winestro Cloud Integration ist aktuell nicht betriebsbereit.","needMigration2":"Es sind Eingaben Ihrerseits notwendig. Bitte f\xfchren Sie den Migrationsassistenten aus.","readyTitle":"Betriebsbereit","ready":"Ihre Winestro Cloud Integration ist betriebsbereit.","activityStateTitle":"Aufgabenstatus","toTheDocumentation":"Zur Dokumentation","taskLogTitle":"Aufgabenprotokoll","cronLogTitle":"Prozessausf\xfchrungsprotokoll","logDownloadTitle":"Logdateien","logDownloadButton":"Logfiles herunterladen"},"installation":{"title":"Installation","description":"Willkommen beim Installationsassistenen f\xfcr Ihre Winestro Integration.","loading":"Lade Installationsassistent ...","done":"Die Erstinstallation ist abgeschlossen und kann nur einmalig gestartet werden.","connection":{"title":"Verbindung einrichten"},"measurements":{"title":"Ma\xdfeinheiten (Einstellungen > Ma\xdfeinheiten)","createAll":"Alle nicht definierten Ma\xdfeinheiten automatisch anlegen"},"properties":{"title":"Produkteigenschaften (Kataloge > Eigenschaften)","createAll":"Alle nicht definierten Eigenschaften automatisch anlegen"},"salesChannel":{"title":"Verkaufskanal"},"payment":{"title":"Zahlungsarten"},"shipping":{"title":"Versandarten"},"tasks":{"title":"Aufgaben anlegen","description":"In diesem letzten Schritt werden die Aufgaben f\xfcr das Programm angelegt."}},"connections":{"title":"Verbindungen","add":"Verbindung hinzuf\xfcgen","winestroId":"Winestro ID","winestroShopName":"Winestro Shop Name","create":{"title":"Verbindung hinzuf\xfcgen","notificationTitle":"Verbindung hinzugef\xfcgt","notificationSuccess":"Die Verbindung wurde erfolgreich hinzugef\xfcgt"},"edit":{"title":"Verbindung bearbeiten"},"delete":{"confirm":"Wollen Sie diese Verbindung wirklich entfernen?","notificationTitle":"Verbindung entfernt","notificationSuccess":"Die Verbindung wurde erfolgreich entfernt"},"checkConnection":{"title":"API Test","success":"Verbindung wurde erfolgreich getestet","error":"Verbindung konnte nicht hergestellt werden. Bitte pr\xfcfe die Zugangsdaten","button":"Verbindung pr\xfcfen"},"form":{"name":"Name der Verbindung","fillsAutomatically":"... leer lassen und es f\xfcllt sich automatisch aus","url":"Winestro URL","userId":"User ID","shopId":"Shop ID","secretId":"API User","secretCode":"API Code","checkConnection":"Verbindung testen"}},"measurements":{"title":"Ma\xdfeinheiten","notificationSuccessTitle":"Ma\xdfeinheiten speichern","notificationSuccessMessage":"Die Ma\xdfeinheiten wurden erfolgreich gespeichert.","form":{"litre":"Liter","kilo":"Kilogramm","gramperhundret":"Gramm pro 100 ml","volumepercent":"Volumenprozent"}},"properties":{"title":"Produkteigenschaften","notificationSuccessTitle":"Produkteigenschaften speichern","notificationSuccessMessage":"Die Produkteigenschaften wurden erfolgreich gespeichert.","form":{"country":"Herstellungsland","year":"Jahrgang","kind":"Rebsorte","quality":"Qualit\xe4t","taste":"Geschmack","region":"Region","articleGroup":"Artikelgruppe","ingredients":"Zutaten","sugar":"Zucker","alcohol":"Alkohol","acid":"S\xe4ure","sulfits":"Sulfite","nuances":"Nuancen","awards":"Auszeichnungen","bottles":"Flaschenanzahl","category":"Produktkategorie","allergens":"Allergene","calories":"Kalorien","protein":"Eiwei\xdf","area":"Anbaugebiet","location":"Lage","development":"Ausbau","drinkingTemperature":"Trinktemperatur","bestBeforeDate":"Haltbarkeitsdatum","fat":"Fetts\xe4uren","unsaturatedFat":"Unges\xe4ttigte Fetts\xe4uren","carbonhydrates":"Kohlenhydrate","salt":"Salz","fiber":"Ballaststoffe","vitamins":"Vitamine","freeAcid":"Freie Schwefels\xe4ure","totalAcid":"Schwefels\xe4ure gesamt","histamin":"Histamin","glycerin":"Glycerin","labelText":"E-Label Freitext","labelLink":"E-Label Link","labelExtern":"E-Label externer Link"}},"salesChannels":{"title":"Verkaufskan\xe4le","config":"Verkaufskan\xe4le konfigurieren","edit":"Verkaufskanal konfigurieren","notificationSaveSuccessTitle":"Verkaufskanal gespeichert","notificationSaveSuccessMessage":"Der Verkaufskanal wurde erfolgreich gespeichert","notificationDeleteSuccessTitle":"Verkaufskanal/Winestro gel\xf6scht","notificationDeleteSuccessMessage":"Die Verkaufskanal und Winestro Verbindung wurde erfolgreich entfernt.","delete":{"confirm":"Wollen Sie diese Verkaufskanal und Winestro Shop Verbindung entfernen?"},"form":{"salesChannel":"Verkaufskanal","winestroConnectionName":"Winestro Shop"}},"payment":{"title":"Zahlungsarten","paymentMapping":{"payment":"Shopware Zahlungsart","winestro":"Winestro Zahlungsart"}},"shipping":{"title":"Versandarten","shippingMapping":{"shipping":"Shopware Versandart","winestro":"Winestro Versandart"}},"tasks":{"title":"Aufgaben planen","add":"Aufgabe hinzuf\xfcgen","notificationTaskSavedTitle":"Aufgabe gespeichert","notificationTaskSavedMessage":"Die Aufgabe wurde erfolgreich gespeichert.","notificationTaskDeletedTitle":"Aufgabe gel\xf6scht","notificationTaskDeletedMessage":"Die Aufgabe wurde erfolgreich gel\xf6scht.","notificationTaskExecuteTitle":"Aufgabe ausf\xfchren","notificationTaskExecuteMessage":"Die Aufgabe wird ausgef\xfchrt","notificationTaskExecuteDuplicateTitle":"Aufgabe ausf\xfchren","notificationTaskExecuteDuplicateMessage":"Diese Aufgabe wird bereits ausgef\xfchrt","delete":{"confirm":"Wollen Sie diese Aufgabe wirklich l\xf6schen?"},"productImportTask":{"name":"Produkte importieren"},"productImageUpdateTask":{"name":"Produktbilder aktualisieren"},"productStockTask":{"name":"Lagerbestand aktualisieren"},"productCategoryAssignmentTask":{"name":"Produktkategorien zuordnen"},"orderExportTask":{"name":"Bestellungen exportieren"},"orderStatusUpdateTask":{"name":"Bestellstatus aktualisieren"},"newsletterReceiverImportTask":{"name":"Newsletterempf\xe4nger importieren"},"listing":{"active":"Aktiv?","task":"Aufgabe","name":"Name","winestroShopName":"Winestro Shop"},"config":{"title":"Aufgabe"},"taskNames":{"productImport":"Produktimport","productImageUpdate":"Produktbildupdate","productStock":"Lagerbestand aktualisieren","productCategoryAssignment":"Kategoriezuordnung zuweisen","orderExport":"Bestellungsexport","orderStatusUpdate":"Bestellstatus aktualisieren","newsletterReceiverImport":"Newsletterempf\xe4nger importieren"},"taskDescriptions":{"productImport":"Produkte aus Winestro nach Shopware importieren","productImageUpdate":"Produktbilder aus Winestro in Shopware aktualisieren","productStock":"Produkt-Lagerbestand aus Winestro in Shopware \xfcbernehmen","productCategoryAssignment":"Kategoriezuordnung in Shopware zuweisen","orderExport":"Bestellungen von Shopware zu Winestro senden","newsletterReceiverImport":"Newsletterempf\xe4nger von Winestro nach Shopware importieren"},"form":{"active":"Aufgabe aktiv","type":"Art der Aufgabe","name":"Name der Aufgabe","data":"Daten\xfcbermittlung","winestroShopName":"Winestro Shop","generalData":"Allgemeine Daten zum Task","tax":"Standard Steuersatz","articlenumber":"Artikelnummer","categoryIdentifier":"winestro.cloud Kategorie-Identifizierer","articlenumberDescription":"Hier k\xf6nnen Sie bestimmen, wie sich Ihre Artikelnummer zusammensetzt. Geben Sie an mit welchem Sonderzeichen sie Artikelnummer, Jahrgang und Abf\xfcllung trennen.","year":"Jahrgang","bottling":"Abf\xfcllung","yearSeparator":"Jahrgangstrennzeichen","bottlingSeparator":"Abf\xfcllungstrennzeichen","productsFromSalesChannelsIds":"Bestellungen aus diesen Verkaufskan\xe4len exportieren","productsFromWinestroConnectionIds":"Bestellungen f\xfcr Produkte aus diesen winestro.cloud Verbindungen exportieren","visibleInSalesChannelsIds":"Sichtbar in folgenden Verkaufskan\xe4len","reducedTax":"Reduzierter Steuersatz","deliveryTime":"Lieferzeit","mediaFolder":"Medienverzeichnis f\xfcr Produktbilder","maxImageWidth":"Maximale Bildbreite","maxImageHeight":"Maximale Bildh\xf6he","sellingLimit":"Abverkaufsgrenze","devlivery":"Versandarten","defaultManufacturer":"Standard Hersteller","productdata":"Produktdaten","orderdata":"Bestelldaten","newsletterdata":"Newsletterdaten","salesChannel":"Verkaufskanal","executeDescription":"F\xfcgen sie Tasks an diesen Prozess an, so das diese nach ihm ausgef\xfchrt werden.","executeTitle":"Aufgabe anf\xfcgen","suppressEmail":"Keine Emails versenden beim setzen des Status.","enabled":{"products":{"enabled":"Produktdatenimport aktiv","activestatus":"Produktstatus aktualisieren","images":"Produktbilder \xfcbernehmen","description":"Beschreibung \xfcbernehmen","freeshipping":"Kostenlosen Versand \xfcbernehmen","manufacturer":"Hersteller \xfcbernehmen","categories":"Kategorien \xfcbernehmen","stockUpdate":"Lagerbestand \xfcbernehmen"},"orders":{"enabled":"Bestellungen \xfcbermitteln","orderstatusupdate":"Bestellstatus von winestro.cloud \xfcbernehmen","sendWinestroEmail":"Winestro Bestellbest\xe4tigung senden"},"newsletter":"Newsletterempf\xe4nger \xfcbernehmen"}}},"tasks-extensions":{"title":"Aufgaben erweitern","add":"Aufgabe erweitern","notificationExtensionSavedTitle":"Aufgabe erweitert","notificationExtensionSavedMessage":"Die Aufgabe wurde erfolgreich erweitert","notificationExtensionDeletedTitle":"Erweiterung entfernt","notificationExtensionDeletedMessage":"Die Erweiterung wurde entfernt.","listing":{"active":"Aktiv?","task":"Aufgabe","name":"Erweiterung","winestroShopName":"Winestro Shop"},"delete":{"confirm":"Soll diese Erweiterung entfernt werden?"},"extensionsNames":{"productStockAdder":"Lagerbestand hinzuf\xfcgen"},"config":{"title":"Aufgaben erweitern"},"form":{"type":"Art der Erweiterung","name":"Name","task":"Aufgabe","active":"Diese Erweiterung aktivieren"}},"cron":{"title":"Prozessausf\xfchrung","add":"Prozess hinzuf\xfcgen","delete":{"confirm":"Wollen Sie diesen Prozess wirklich l\xf6schen?"},"listing":{"active":"Aktiv?","times":"Zeitplan","name":"Prozessname","task":"Aufgabe"},"form":{"task":"Aufgabe","times":"Zeitplan","name":"Prozessname","enabled":{"enabled":"Prozess aktiviert"}},"names":{"productImport":"Produkte importieren","orderExport":"Bestellungen exportieren","orderStatusUpdate":"Bestellstatus aktualisieren","newsletterReceiverImport":"Newsletterempf\xe4nger importieren"},"times":{"5m":"Alle 5 Minuten","15m":"Alle 15 Minuten","30m":"Alle 30 Minuten","1h":"Jede Stunde","6h":"Alle 6 Stunden","12h":"Alle 12 Stunden","1d":"Einmal am Tag","1w":"Einmal die Woche","1m":"Einmal im Monat"},"notificationExtensionSavedTitle":"Prozess gespeichert","notificationExtensionSavedMessage":"Die Prozess wurde erfolgreich gespeichert.","notificationExtensionDeletedTitle":"Prozess gel\xf6scht","notificationExtensionDeletedMessage":"Die Prozess wurde erfolgreich gel\xf6scht."},"payment-names":{"PAYMENT_INVOICE":"Rechnung","PAYMENT_CASHPREPAYED":"Vorkasse/Bar","PAYMENT_DEBIT":"Bankeinzug","PAYMENT_PAYPAL":"PayPal","PAYMENT_CASH":"Bar","PAYMENT_PREPAYED":"Vorkasse","PAYMENT_EC":"EC Cash","PAYMENT_SOFORT":"Sofort\xfcberweisung","PAYMENT_CREDITCARD":"Kreditkarte","PAYMENT_AMAZON_PAY":"Amazon Pay","PAYMENT_PAYPAL_INVOICE":"PayPal Rechnung","PAYMENT_GIROPAY":"Giropay","PAYMENT_EPS":"EPS","PAYMENT_IDEAL":"Ideal","PAYMENT_PRZELEWY24":"Przelewy24","PAYMENT_ALLPAY":"Alipay","PAYMENT_MULTIBANCO":"Multibanco","PAYMENT_GOOGLE_PAY":"Google Pay","PAYMENT_APPLE_PAY":"Apple Pay","PAYMENT_CASH_ON_DELIVERY":"Nachnahme","PAYMENT_BANCONTACT":"Bancontact","PAYMENT_PREPAYED_PAYED":"Vorkasse Bez.","PAYMENT_SHOPIFY_PAYMENTS":"Shopify Payments","PAYMENT_WINEESTRAO_PREPAYED":"Winestro Vorkasse","PAYMENT_ELOPAGE":"Elopage","PAYMENT_KLARNA":"Klarna","PAYMENT_SUMUP":"Sumup","PAYMENT_SIXSAFERPAYED":"SixSaferpay","PAYMENT_POSTFINANCE":"Postfinance","PAYMENT_STRIPE":"Stripe","PAYMENT_CARD4VENT":"Card4vent","PAYMENT_BARKASSEA":"BarkasseA","PAYMENT_BARKASSEB":"BarkasseB","PAYMENT_BARKASSEC":"BarkasseC"},"shipping-names":{"SHIPPING_COLLECT":"Selbstabholung","SHIPPING_TOUR":"Liefertour","SHIPPING_DPD":"Versand DPD","SHIPPING_DHL":"Versand DHL","SHIPPING_UPS":"Versand UPS","SHIPPING_TOPLOGISTIK":"Versand TOP-Logistik","SHIPPING_GLS":"Versand GLS","SHIPPING_HAULAGE":"Spedition","SHIPPING_NONE":"Keine","SHIPPING_BY_CONTACT":"nach Absprache","SHIPPING_HERMES":"Versand Hermes","SHIPPING_EXW_MERTESDORF":"EXW Mertesdorf","SHIPPING_FCA_MERTESDORF":"FCA Mertesdorf","SHIPPING_IHV_SPEDITION":"IHV Spedition"}}}'),B=JSON.parse('{"sumedia-winestro":{"createAutomatically":"Create Automatically","save":"Save","add":"Add","edit":"Edit","execute":"Execute","delete":"Delete","yes":"Yes","no":"No","active":"Activated","inactive":"Deactivated","title":"Winestro Cloud Integration","description":"winestro.cloud integration for synchronization with Shopware","tabs":{"overview":"Overview","installation":"Installation","migration":"Migration","loganalyzer":"Tasklog","connections":"Connections","measurements":"Measurements","properties":"Product Properties","saleChannels":"Sales Channels","tasks":"Plan Tasks","tasks-extensions":"Extend Tasks","cron":"Process Execution","logdownload":"Log Download"},"overview":{"title":"Overview","welcomeTitle":"Welcome to the Winestro Cloud Integration","welcomeText":"Connect your winestro.cloud account with Shopware.","welcomeText2":"The installation wizard will create a standard setup for you that should be sufficient for many use cases, but with Winestro Cloud Integration, more complex scenarios can also be mapped.","welcomeText3":"If you are missing functionality or need support, please do not hesitate to get in touch.","welcomeText4":"Thank you very much for using my product and I wish you much success.","needInstallTitle":"Installation required","needInstall":"Your Winestro Cloud Integration is not yet ready for use.","needInstall2":"Please run the installation wizard for initial setup.","needMigration":"Your Winestro Cloud Integration is currently not operational.","needMigration2":"Input from you is required. Please run the migration assistant.","readyTitle":"Operational","ready":"Your Winestro Cloud Integration is operational.","activityStateTitle":"Task Status","toTheDocumentation":"To the documentation","taskLogTitle":"Tasklog","cronLogTitle":"Cronlog","executesTitle":"Executes currently","logDownloadTitle":"Logfiles","logDownloadButton":"Download Logfiles"},"installation":{"title":"Installation","description":"Welcome to the installation assistant for your Winestro integration.","loading":"Loading installation assistant ...","done":"The initial installation is complete and can only be started once.","connection":{"title":"Set up connection"},"measurements":{"title":"Measurements (Settings > Measurements)","createAll":"Automatically create all undefined measurements"},"properties":{"title":"Product Properties (Catalogs > Properties)","createAll":"Automatically create all undefined properties"},"salesChannel":{"title":"Sales Channel"},"payment":{"title":"Payment Methods"},"shipping":{"title":"Shipping Methods"},"tasks":{"title":"Create Tasks","description":"In this final step, tasks for the program will be created."}},"connections":{"title":"Connections","add":"Add Connection","winestroId":"Winestro ID","winestroShopName":"Winestro Shop Name","create":{"title":"Add Connection","notificationTitle":"Connection Added","notificationSuccess":"The connection was successfully added"},"edit":{"title":"Edit Connection"},"delete":{"confirm":"Do you really want to remove this connection?","notificationTitle":"Connection Removed","notificationSuccess":"The connection was successfully removed"},"checkConnection":{"title":"API Test","success":"Connection successfully tested","error":"Connection could not be established. Please check the credentials","button":"Check Connection"},"form":{"name":"Connection Name","fillsAutomatically":"... leave blank and it will be filled automatically","url":"Winestro URL","userId":"User ID","shopId":"Shop ID","secretId":"API User","secretCode":"API Code","checkConnection":"Test Connection"}},"measurements":{"title":"Measurements","notificationSuccessTitle":"Save Measurements","notificationSuccessMessage":"The measurements were successfully saved.","form":{"litre":"Liter","kilo":"Kilogram","gramperhundret":"Grams per 100 ml","volumepercent":"Volume Percent"}},"properties":{"title":"Product Properties","notificationSuccessTitle":"Save Product Properties","notificationSuccessMessage":"The product properties were successfully saved.","form":{"country":"Land Of Production","year":"Year","kind":"Grape Variety","quality":"Quality","taste":"Taste","region":"Region","articleGroup":"Article Group","ingredients":"Ingredients","sugar":"Sugar","alcohol":"Alcohol","acid":"Acid","sulfits":"Sulfites","nuances":"Nuances","awards":"Awards","bottles":"Number of Bottles","category":"Productcategory","allergens":"Allergens","calories":"Calories","protein":"Protein","area":"Area","location":"Location","development":"Development","drinkingTemperature":"Drinking Temperature","bestBeforeDate":"Best Before Date","fat":"Fatty Acids","unsaturatedFat":"Unsaturated Fatty Acids","carbonhydrates":"Carbohydrates","salt":"Salt","fiber":"Fiber","vitamins":"Vitamins","freeAcid":"Free acids","totalAcid":"Total acid","histamin":"Histamin","glycerin":"Glycerin","labelText":"E-Label free text","labelLink":"E-Label link","labelExtern":"E-Label extern link"}},"salesChannels":{"title":"Sales Channels","config":"Configure Sales Channels","edit":"Configure Sales Channel","notificationSaveSuccessTitle":"Sales Channel Saved","notificationSaveSuccessMessage":"The sales channel was successfully saved","notificationDeleteSuccessTitle":"Sales Channel/Winestro Deleted","notificationDeleteSuccessMessage":"The sales channel and Winestro connection were successfully removed.","notificationTaskExecuteDuplicateTitle":"Execute Task","notificationTaskExecuteDuplicateMessage":"This Task already is executed","delete":{"confirm":"Do you want to remove this sales channel and Winestro shop connection?"},"form":{"salesChannel":"Sales Channel","winestroConnectionName":"Winestro Shop"}},"payment":{"title":"Payment Methods","paymentMapping":{"payment":"Shopware Payment Method","winestro":"Winestro Payment Method"}},"shipping":{"title":"Shipping Methods","shippingMapping":{"shipping":"Shopware Shipping Method","winestro":"Winestro Shipping Method"}},"tasks":{"title":"Plan Tasks","add":"Add Task","notificationTaskSavedTitle":"Task Saved","notificationTaskSavedMessage":"The task was successfully saved.","notificationTaskDeletedTitle":"Task Deleted","notificationTaskDeletedMessage":"The task was successfully deleted.","delete":{"confirm":"Do you really want to delete this task?"},"productImportTask":{"name":"Import Products"},"productImageUpdateTask":{"name":"Update Product Images"},"productStockTask":{"name":"Update Stock"},"productCategoryAssignmentTask":{"name":"Assign Product Categories"},"orderExportTask":{"name":"Export Orders"},"orderStatusUpdateTask":{"name":"Update Orderstatus"},"newsletterReceiverImportTask":{"name":"Import Newsletter Recipients"},"listing":{"active":"Active?","task":"Task","name":"Name","winestroShopName":"Winestro Shop"},"config":{"title":"Task"},"taskNames":{"productImport":"Product Import","productImageUpdate":"Product Image Update","productStock":"Update Stock","productCategoryAssignment":"Assign Category","orderExport":"Order Export","orderStatusUpdate":"Update orderstatus","newsletterReceiverImport":"Import Newsletter Recipients"},"taskDescriptions":{"productImport":"Import products from Winestro to Shopware","productImageUpdate":"Update product images from Winestro to Shopware","productStock":"Transfer product stock from Winestro to Shopware","productCategoryAssignment":"Assign categories in Shopware","orderExport":"Send orders from Shopware to Winestro","newsletterReceiverImport":"Import newsletter recipients from Winestro to Shopware"},"form":{"active":"Task Active","type":"Type of Task","name":"Task Name","data":"Data Transfer","winestroShopName":"Winestro Shop","generalData":"General Data for Task","tax":"Standard Tax Rate","articlenumber":"Article Number","articlenumberDescription":"Here you can determine how your article number is composed. Specify which special character separates the article number, year, and bottling.","year":"Year","categoryIdentifier":"winestro.cloud Category Identifier","bottling":"Bottling","yearSeparator":"Year Separator","bottlingSeparator":"Bottling Separator","productsFromSalesChannelsIds":"Export orders from these sales channels","productsFromWinestroConnectionIds":"Export orders for products from these winestro.cloud connections","visibleInSalesChannelsIds":"Visible in following Sales Channel","reducedTax":"Reduced Tax Rate","deliveryTime":"Delivery Time","mediaFolder":"Media Folder for Product Images","maxImageWidth":"Maximum Image Width","maxImageHeight":"Maximum Image Height","sellingLimit":"Selling Limit","devlivery":"Shipping Methods","defaultManufacturer":"Default Manufacturer","productdata":"Product Data","orderdata":"Order Data","newsletterdata":"Newsletter Data","salesChannel":"Sales Channel","executeDescription":"Add tasks to this process so that they are executed after it.","executeTitle":"Attach Task","suppressEmail":"Send no emails during setting of the status.","enabled":{"products":{"enabled":"Take Over Product Data","activestatus":"Update Product Status","images":"Take Over Product Images","description":"Take Over Description","freeshipping":"Take Over Free Shipping","manufacturer":"Take Over Manufacturer","categories":"Take Over Categories","stockUpdate":"Take Over Stock"},"orders":{"enabled":"Transmit Orders","orderstatusupdate":"Take orderstatus from winestro.cloud","sendWinestroEmail":"Send Winestro Order Confirmation"},"newsletter":"Take Over Newsletter Recipients"}}},"tasks-extensions":{"title":"Extend Tasks","add":"Extend Task","notificationExtensionSavedTitle":"Task extended","notificationExtensionSavedMessage":"The Task has been successfully extended.","notificationExtensionDeletedTitle":"Extension removed","notificationExtensionDeletedMessage":"The extension has been removed.","listing":{"active":"Active?","task":"Task","name":"Extension","winestroShopName":"Winestro Shop"},"delete":{"confirm":"Should this extension be removed?"},"extensionsNames":{"productStockAdder":"Add Stock"},"config":{"title":"Extend Extensions"},"form":{"type":"Extension Type","name":"Name","task":"Task","active":"This extension is active"}},"cron":{"title":"Process Execution","add":"Add Process","delete":{"confirm":"Do you really want to delete this process?"},"listing":{"active":"Active?","times":"Schedule","name":"Process Name","task":"Task"},"form":{"task":"Task","times":"Schedule","name":"Process Name","enabled":{"enabled":"Process active"}},"times":{"5m":"Every 5 Minutes","15m":"Every 15 Minutes","30m":"Every 30 Minutes","1h":"Every Hour","6h":"Every 6 Hours","12h":"Every 12 Hours","1d":"Once a Day","1w":"Once a Week","1m":"Once a Month"},"notificationExtensionSavedTitle":"Process Saved","notificationExtensionSavedMessage":"The process was successfully saved.","notificationExtensionDeletedTitle":"Process Deleted","notificationExtensionDeletedMessage":"The process was successfully deleted."},"payment-names":{"PAYMENT_INVOICE":"Rechnung","PAYMENT_CASHPREPAYED":"Vorkasse/Bar","PAYMENT_DEBIT":"Bankeinzug","PAYMENT_PAYPAL":"PayPal","PAYMENT_CASH":"Bar","PAYMENT_PREPAYED":"Vorkasse","PAYMENT_EC":"EC Cash","PAYMENT_SOFORT":"Sofort\xfcberweisung","PAYMENT_CREDITCARD":"Kreditkarte","PAYMENT_AMAZON_PAY":"Amazon Pay","PAYMENT_PAYPAL_INVOICE":"PayPal Rechnung","PAYMENT_GIROPAY":"Giropay","PAYMENT_EPS":"EPS","PAYMENT_IDEAL":"Ideal","PAYMENT_PRZELEWY24":"Przelewy24","PAYMENT_ALLPAY":"Alipay","PAYMENT_MULTIBANCO":"Multibanco","PAYMENT_GOOGLE_PAY":"Google Pay","PAYMENT_APPLE_PAY":"Apple Pay","PAYMENT_CASH_ON_DELIVERY":"Nachnahme","PAYMENT_BANCONTACT":"Bancontact","PAYMENT_PREPAYED_PAYED":"Vorkasse Bez.","PAYMENT_SHOPIFY_PAYMENTS":"Shopify Payments","PAYMENT_WINEESTRAO_PREPAYED":"Winestro Vorkasse","PAYMENT_ELOPAGE":"Elopage","PAYMENT_KLARNA":"Klarna","PAYMENT_SUMUP":"Sumup","PAYMENT_SIXSAFERPAYED":"SixSaferpay","PAYMENT_POSTFINANCE":"Postfinance","PAYMENT_STRIPE":"Stripe","PAYMENT_CARD4VENT":"Card4vent","PAYMENT_BARKASSEA":"BarkasseA","PAYMENT_BARKASSEB":"BarkasseB","PAYMENT_BARKASSEC":"BarkasseC"},"shipping-names":{"SHIPPING_COLLECT":"Selbstabholung","SHIPPING_TOUR":"Liefertour","SHIPPING_DPD":"Versand DPD","SHIPPING_DHL":"Versand DHL","SHIPPING_UPS":"Versand UPS","SHIPPING_TOPLOGISTIK":"Versand TOP-Logistik","SHIPPING_GLS":"Versand GLS","SHIPPING_HAULAGE":"Spedition","SHIPPING_NONE":"Keine","SHIPPING_BY_CONTACT":"nach Absprache","SHIPPING_HERMES":"Versand Hermes","SHIPPING_EXW_MERTESDORF":"EXW Mertesdorf","SHIPPING_FCA_MERTESDORF":"FCA Mertesdorf","SHIPPING_IHV_SPEDITION":"IHV Spedition"}}}');let q=Shopware.Classes.ApiService;class V extends q{constructor(e,t){super(e,t)}post(e,t){return this.httpClient.post(e,t,this.getBasicHeaders({headers:{Authorization:"Bearer "+this.loginService.getToken()}})).then(e=>V.handleResponse(e))}}let{Utils:z,Context:G}=Shopware,{Criteria:H}=Shopware.Data;class j{repository=null;configDomain=null;constructor(e,t){this.repository=e.create("system_config"),this.configDomain=t}async get(e){e=this.configDomain+".config."+e;let t=new H().addFilter(H.equals("configurationKey",e));return await this.repository.search(t,G.api).then(e=>e.length?e[0].configurationValue:null)}async set(e,t){e=this.configDomain+".config."+e;let s=new H().addFilter(H.equals("configurationKey",e));return await this.repository.search(s,G.api).then(s=>{if(s.length)return s[0].configurationValue=t,this.repository.save(s[0]);{let s=this.repository.create(G);return s.id=z.createId(),s.configurationKey=e,s.configurationValue=t,this.repository.save(s)}})}}let{Utils:K,Context:Z}=Shopware,{Criteria:J}=Shopware.Data;class X{repositoryFactory=null;customFieldSets={sumedia_winestro_product_details:{nameEN:"Winestro Product Details",nameDE:"Winestro Produktdetails",relations:[{entityName:"product"}]},sumedia_winestro_product_switches:{nameEN:"Winestro Product Switches",nameDE:"Winestro Produktschalter",relations:[{entityName:"product"}]},sumedia_winestro_order_details:{nameEN:"Winestro Order Details",nameDE:"Winestro Bestelldetails",relations:[{entityName:"order"}]}};customFields={sumedia_winestro_product_details:{apnr:{nameEN:"APNR",nameDE:"APNR",type:"text",visible:!0},article_number:{nameEN:"Article Number",nameDE:"Artikelnummer",type:"text",visible:!0},bottles:{nameEN:"Numbers of bottles",nameDE:"Flaschenanzahl",type:"number",visible:!1},best_before_date:{nameEN:"Best Before Date",nameDE:"Haltbarkeitsdatum",type:"date",visible:!0},shelf_life:{nameEN:"Shelf Life",nameDE:"Lagerf\xe4higkeit",type:"text",visible:!0},e_label_free_text:{nameEN:"E-Label Free Text",nameDE:"E-Label Freitext",type:"html",visible:!0},e_label_link:{nameEN:"E-Label Link",nameDE:"E-Label Link",type:"text",visible:!0},e_label_external_link:{nameEN:"E-Label external link",nameDE:"E-Label externer Link",type:"text",visible:!0},description:{nameEN:"Productdescription",nameDE:"Produktbeschreibung",type:"html",visible:!0},shop_description:{nameEN:"Shop Description",nameDE:"Shopbeschreibung",type:"html",visible:!0},product_note:{nameEN:"Producte Note",nameDE:"Produktnotiz",type:"html",visible:!0},bundle:{nameEN:"Package Items",nameDE:"Sammelpaket Artikel",type:"text",visible:!1},stock_update_date:{nameEN:"Last Stock Update",nameDE:"Letzte Lagerbestandsaktualisierung",type:"datetime",visible:!0},winestro_connection_id:{nameEN:"Winestro Connection ID",nameDE:"Winestro Connection ID",type:"text",visible:!1}},sumedia_winestro_product_switches:{activestatus:{nameEN:"Update Activestatus",nameDE:"Aktivstatus aktualisieren",type:"switch",visible:!0},manufacturer:{nameEN:"Update Manufacturer",nameDE:"Hersteller aktualisieren",type:"switch",visible:!0},free_shipping:{nameEN:"Update Freeshipping",nameDE:"Kostenlosen Versand aktualisieren",type:"switch",visible:!0},description:{nameEN:"Update Description",nameDE:"Beschreibung aktualisieren",type:"switch",visible:!0}},sumedia_winestro_order_details:{order_number:{nameEN:"Ordernumber",nameDE:"Bestellnummer",type:"text",visible:!0},export_tries:{nameEN:"Export tries",nameDE:"Exportversuche",type:"number",visible:!1},billing_number:{nameEN:"Billing Number",nameDE:"Rechnungsnummer",type:"text",visible:!0}}};constructor(e){this.repositoryFactory=e}async upsertCustomFields(){for(let e in this.customFieldSets){let t=this.customFieldSets[e],s=await this.getCustomFieldSetByIdentifier(e),n=null;n=s?s.id:await this.createCustomFieldSet(e,t.nameEN,t.nameDE,t.relations);let i=1;for(let t in this.customFields[e]){let s=this.customFields[e][t],a=e+"_"+t;await this.getCustomFieldByIdentifier(a)||await this.createCustomField(n,a,s.nameEN,s.nameDE,s.type,s.visible,i++)}}}async getCustomFieldSetByIdentifier(e){return await this.repositoryFactory.create("custom_field_set").search((new J).addFilter(J.equals("name",e)),Z.api).then(e=>{if(e.length)return e[0]})}async createCustomFieldSet(e,t,s,n){let i=this.repositoryFactory.create("custom_field_set"),a=K.createId(),o=i.create(Z.api);for(let r in o.id=a,o.name=e,o.config={label:{"en-GB":t,"de-DE":s}},await i.save(o),n){let e=this.repositoryFactory.create("custom_field_set_relation"),t=e.create(Z.api);t.id=K.createId(),t.customFieldSetId=a,t.entityName=n[r].entityName,await e.save(t)}return a}async getCustomFieldByIdentifier(e){return await this.repositoryFactory.create("custom_field").search((new J).addFilter(J.equals("name",e)),Z.api).then(e=>{if(e.length)return e[0]})}async createCustomField(e,t,s,n,i,a,o){let r=this.repositoryFactory.create("custom_field"),l=K.createId(),d=r.create(Z.api);return d.id=l,d.customFieldSetId=e,d.name=t,d.type=i,d.customFieldPosition=o,d.customFieldVisible=a,d.config={label:{"en-GB":s,"de-DE":n}},"html"===i&&(d.config.componentName="sw-text-editor",d.config.customFieldType="html"),await r.save(d),l}}let{Utils:Q,Context:ee}=Shopware,{Criteria:et}=Shopware.Data;class es{repositoryFactory=null;measurements={litre:["Litre","l","Liter","l"],kilo:["Kilogram","kg","Kilogramm","kg"],gramperhundret:["Gram per 100 ml","g","Gramm pro 100 ml","g"],volumepercent:["Volumepercent","% vol.","Volumenprozent","% vol."]};constructor(e){this.repositoryFactory=e}async getUnit(e){let t=this.repositoryFactory.create("unit"),s=new et;return s.addFilter(et.equals("name",e)),await t.search(s,ee.api).then(e=>e.length?e[0]:null)}async createUnit(e,t){let s=this.repositoryFactory.create("unit");if(null===await this.getUnit(e)){let n=s.create(ee.api);return n.id=Q.createId(),n.name=e,n.shortCode=t,await s.save(n),n.id}}}let{Context:en,Utils:ei}=Shopware,{Criteria:ea}=Shopware.Data;class eo{repositoryFactory=null;properties={country:["Country","Land"],year:["Year","Jahrgang"],kind:["Kind","Rebsorte"],quality:["Quality","Qualit\xe4t"],taste:["Taste","Geschmack"],region:["Region","Region"],articleGroup:["Article Group","Artikelgruppe"],ingredients:["Ingredients","Zutat"],sugar:["Sugar","Zucker"],alcohol:["Alcohol","Alkohol"],acid:["Acid","S\xe4ure"],sulfits:["Sulfits","Sulfite"],nuances:["Nuances","Nuancen"],awards:["Awards","Auszeichnung"],bottles:["Bottles included","Flaschenanzahl"],category:["Category","Kategorie"],allergens:["Allergens","Allergene"],calories:["Calories","Kalorien"],protein:["Protein","Eiwei\xdf"],area:["Area","Anbaugebiet"],location:["Location","Lage"],development:["Development","Ausbau"],drinkingTemperature:["Drinking Temperature","Trinktemperatur"],fat:["Fat","Fetts\xe4uren"],unsaturatedFat:["Unsaturated fat","Unges\xe4ttigte Fetts\xe4uren"],carbonhydrates:["Carbonhydrates","Kohlenhydrate"],salt:["Salt","Salz"],fiber:["Fiber","Ballaststoffe"],vitamins:["Vitamins","Vitamine"],freeAcid:["Free acid","Freie Schwefels\xe4ure"],totalAcid:["Total acid","Schwefels\xe4ure Gesamt"],histamin:["Histamin","Histamin"],glycerin:["Glycerin","Glycerin"]};constructor(e){this.repositoryFactory=e}async getPropertyGroup(e){let t=this.repositoryFactory.create("property_group"),s=new ea;return s.addFilter(ea.equals("name",e)),await t.search(s,en.api).then(e=>e.length?e[0]:null)}async createPropertyGroup(e){let t=this.repositoryFactory.create("property_group");if(null===await this.getPropertyGroup(e)){let s=t.create(en.api);return s.id=ei.createId(),s.name=e,await t.save(s),s.id}}}class er{md5(e){var t="0123456789abcdef";function s(e){var s,n="";for(s=0;s<=3;s++)n+=t.charAt(e>>8*s+4&15)+t.charAt(e>>8*s&15);return n}function n(e,t){var s=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(s>>16)<<16|65535&s}function i(e,t,s,i,a,o){var r;return n((r=n(n(t,e),n(i,o)))<<a|r>>>32-a,s)}function a(e,t,s,n,a,o,r){return i(t&s|~t&n,e,t,a,o,r)}function o(e,t,s,n,a,o,r){return i(t&n|s&~n,e,t,a,o,r)}function r(e,t,s,n,a,o,r){return i(t^s^n,e,t,a,o,r)}function l(e,t,s,n,a,o,r){return i(s^(t|~n),e,t,a,o,r)}var d,c,m,u,p,h=function(e){var t,s=(e.length+8>>6)+1,n=Array(16*s);for(t=0;t<16*s;t++)n[t]=0;for(t=0;t<e.length;t++)n[t>>2]|=e.charCodeAt(t)<<t%4*8;return n[t>>2]|=128<<t%4*8,n[16*s-2]=8*e.length,n}(""+e),f=0x67452301,g=-0x10325477,w=-0x67452302,v=0x10325476;for(d=0;d<h.length;d+=16)c=f,m=g,u=w,p=v,f=a(f,g,w,v,h[d+0],7,-0x28955b88),v=a(v,f,g,w,h[d+1],12,-0x173848aa),w=a(w,v,f,g,h[d+2],17,0x242070db),g=a(g,w,v,f,h[d+3],22,-0x3e423112),f=a(f,g,w,v,h[d+4],7,-0xa83f051),v=a(v,f,g,w,h[d+5],12,0x4787c62a),w=a(w,v,f,g,h[d+6],17,-0x57cfb9ed),g=a(g,w,v,f,h[d+7],22,-0x2b96aff),f=a(f,g,w,v,h[d+8],7,0x698098d8),v=a(v,f,g,w,h[d+9],12,-0x74bb0851),w=a(w,v,f,g,h[d+10],17,-42063),g=a(g,w,v,f,h[d+11],22,-0x76a32842),f=a(f,g,w,v,h[d+12],7,0x6b901122),v=a(v,f,g,w,h[d+13],12,-0x2678e6d),w=a(w,v,f,g,h[d+14],17,-0x5986bc72),g=a(g,w,v,f,h[d+15],22,0x49b40821),f=o(f,g,w,v,h[d+1],5,-0x9e1da9e),v=o(v,f,g,w,h[d+6],9,-0x3fbf4cc0),w=o(w,v,f,g,h[d+11],14,0x265e5a51),g=o(g,w,v,f,h[d+0],20,-0x16493856),f=o(f,g,w,v,h[d+5],5,-0x29d0efa3),v=o(v,f,g,w,h[d+10],9,0x2441453),w=o(w,v,f,g,h[d+15],14,-0x275e197f),g=o(g,w,v,f,h[d+4],20,-0x182c0438),f=o(f,g,w,v,h[d+9],5,0x21e1cde6),v=o(v,f,g,w,h[d+14],9,-0x3cc8f82a),w=o(w,v,f,g,h[d+3],14,-0xb2af279),g=o(g,w,v,f,h[d+8],20,0x455a14ed),f=o(f,g,w,v,h[d+13],5,-0x561c16fb),v=o(v,f,g,w,h[d+2],9,-0x3105c08),w=o(w,v,f,g,h[d+7],14,0x676f02d9),g=o(g,w,v,f,h[d+12],20,-0x72d5b376),f=r(f,g,w,v,h[d+5],4,-378558),v=r(v,f,g,w,h[d+8],11,-0x788e097f),w=r(w,v,f,g,h[d+11],16,0x6d9d6122),g=r(g,w,v,f,h[d+14],23,-0x21ac7f4),f=r(f,g,w,v,h[d+1],4,-0x5b4115bc),v=r(v,f,g,w,h[d+4],11,0x4bdecfa9),w=r(w,v,f,g,h[d+7],16,-0x944b4a0),g=r(g,w,v,f,h[d+10],23,-0x41404390),f=r(f,g,w,v,h[d+13],4,0x289b7ec6),v=r(v,f,g,w,h[d+0],11,-0x155ed806),w=r(w,v,f,g,h[d+3],16,-0x2b10cf7b),g=r(g,w,v,f,h[d+6],23,0x4881d05),f=r(f,g,w,v,h[d+9],4,-0x262b2fc7),v=r(v,f,g,w,h[d+12],11,-0x1924661b),w=r(w,v,f,g,h[d+15],16,0x1fa27cf8),g=r(g,w,v,f,h[d+2],23,-0x3b53a99b),f=l(f,g,w,v,h[d+0],6,-0xbd6ddbc),v=l(v,f,g,w,h[d+7],10,0x432aff97),w=l(w,v,f,g,h[d+14],15,-0x546bdc59),g=l(g,w,v,f,h[d+5],21,-0x36c5fc7),f=l(f,g,w,v,h[d+12],6,0x655b59c3),v=l(v,f,g,w,h[d+3],10,-0x70f3336e),w=l(w,v,f,g,h[d+10],15,-1051523),g=l(g,w,v,f,h[d+1],21,-0x7a7ba22f),f=l(f,g,w,v,h[d+8],6,0x6fa87e4f),v=l(v,f,g,w,h[d+15],10,-0x1d31920),w=l(w,v,f,g,h[d+6],15,-0x5cfebcec),g=l(g,w,v,f,h[d+13],21,0x4e0811a1),f=l(f,g,w,v,h[d+4],6,-0x8ac817e),v=l(v,f,g,w,h[d+11],10,-0x42c50dcb),w=l(w,v,f,g,h[d+2],15,0x2ad7d2bb),g=l(g,w,v,f,h[d+9],21,-0x14792c6f),f=n(f,c),g=n(g,m),w=n(w,u),v=n(v,p);return s(f)+s(g)+s(w)+s(v)}}let{Context:el,Utils:ed}=Shopware,{Criteria:ec}=Shopware.Data;class em{configService=null;tasks={productImportTask:{id:ed.createId(),type:"productImport",name:null,winestroConnectionId:null,articleNumberFormat:"[articlenumber+year+bottling]",articleNumberYearSeparator:"+",articleNumberBottlingSeparator:"+",defaultManufacturer:null,tax:null,reducedTax:null,deliveryTime:null,visibleInSalesChannelsIds:[],enabled:{enabled:!0,activestatus:!0,description:!0,freeshipping:!0,manufacturer:!0},extensions:{},execute:[]},productImageUpdateTask:{id:ed.createId(),type:"productImageUpdate",name:null,winestroConnectionId:null,maxImageWidth:860,maxImageHeight:860,mediaFolder:null,enabled:{enabled:!0},extensions:{},execute:[]},productStockTask:{id:ed.createId(),type:"productStock",name:null,winestroConnectionId:null,sellingLimit:0,enabled:{enabled:!0},extensions:{},execute:[]},productCategoryAssignmentTask:{id:ed.createId(),type:"productCategoryAssignment",name:null,winestroConnectionId:null,salesChannelId:null,categoryIdentifier:"Winestro",enabled:{enabled:!0},extensions:{},execute:[]},orderExportTask:{id:ed.createId(),type:"orderExport",name:null,winestroConnectionId:null,productsFromWinestroConnectionIds:null,productsFromSalesChannelsIds:null,enabled:{enabled:!0,sendWinestroEmail:!1},extensions:{},execute:[]},orderStatusUpdateTask:{id:ed.createId(),type:"orderStatusUpdate",name:null,winestroConnectionId:null,suppressEmail:!0,enabled:{enabled:!0},extensions:{},execute:[]},newsletterReceiverImportTask:{id:ed.createId(),type:"newsletterReceiverImport",name:null,winestroConnectionId:null,salesChannelId:null,enabled:{enabled:!0},extensions:{},execute:[]}};extensions={productStockAdder:{id:ed.createId(),type:"productStockAdder",name:null,taskId:null,winestroConnectionId:null,enabled:{enabled:!0}}};constructor(e){this.configService=e}async getTasks(){return await this.configService.get("tasks")}async getTask(e){let t=await this.getTasks();for(let s in t=null!==t?t:{})if(s===e)return t[s];return null}async setTask(e,t){let s=await this.configService.get("tasks");return(s=null===s?{}:s)[e]=t,await this.configService.set("tasks",s)}async removeTask(e){let t=await this.configService.get("tasks"),s={};for(let n in t=null===t?{}:t)n!==e&&(s[n]=t[n]);return await this.configService.set("tasks",s)}}let{Utils:eu,Context:ep}=Shopware,{Criteria:eh}=Shopware.Data;class ef{repositoryFactory=null;configService=null;apiService=null;md5Service=null;customFieldService=null;propertyService=null;measurementService=null;taskService=null;salesChannel={salesChannelId:null,winestroConnections:{}};winestroConnections={winestroConnectionId:null,paymentMapping:null,shippingMapping:null};constructor(e,t,s,n,i,a,o,r){this.repositoryFactory=e,this.configService=t,this.apiService=s,this.md5Service=n,this.customFieldService=i,this.propertyService=a,this.measurementService=o,this.taskService=r}async getWinestroConnections(){return await this.configService.get("winestroConnections")}async requestWinestroConnection(e,t,s,n,i){return await this.apiService.post("sumedia-winestro/check-connection",{url:e,userId:t,shopId:s,secretId:n,secretCode:i}).then(e=>e.success?{success:!0,name:e.winestroShopName}:{success:!1,message:e.message})}getWinestroConnectionId(e,t,s){return this.md5Service.md5(e+t+s)}async setWinestroConnection(e,t,s,n,i,a,o){let r=await this.configService.get("winestroConnections");return(r=null===r?{}:r)[e]={id:e,name:t,url:s,userId:n,shopId:i,secretId:a,secretCode:o},await this.configService.set("winestroConnections",r)}async removeWinestroConnection(e){let t=await this.configService.get("winestroConnections"),s={};for(let n in t=null===t?{}:t)n!==e&&(s[n]=t[n]);return await this.configService.set("winestroConnections",s)}async getSalesChannels(){return await this.configService.get("salesChannels")}async getSalesChannel(e){let t=this.getSalesChannels();for(let s in t=null===t?{}:t)if(s===e)return t[s];return null}async setSalesChannel(e,t){let s=await this.configService.get("salesChannels");return(s=null===s?{}:s)[e]=t,await this.configService.set("salesChannels",s)}async removeSalesChannel(e,t){let s=await this.configService.get("salesChannels"),n={};for(let i in s=null===s?{}:s)if(i!==e)n[i]=s[i];else{let e={};for(let n in s[i].winestroConnections)n!==t&&(e[n]=s[i].winestroConnections[n]);Object.values(e).length&&(n[i]=s[i],n[i].winestroConnections=e)}return await this.configService.set("salesChannels",n)}}let{Application:eg,Module:ew}=Shopware;eg.addServiceProvider("sumediaWinestro",e=>{let t=new V(eg.getContainer("init").httpClient,e.loginService),s=new eo(e.repositoryFactory),n=new er,i=new j(e.repositoryFactory,"SumediaWinestroApi"),a=new X(e.repositoryFactory),o=new es(e.repositoryFactory),r=new em(i);return new ef(e.repositoryFactory,i,t,n,a,s,o,r)}),ew.register("sumedia-winestro",{type:"plugin",name:"sumedia-winestro",title:"sumedia-winestro.title",description:"sumedia-winestro.description",icon:"regular-cog",color:"#ffcc00",snippets:{"de-DE":Y,"en-GB":B},routes:{configuration:{component:"sumedia-winestro",path:"configuration",children:{overview:{component:"sumedia-winestro-overview",path:"overview"},installation:{component:"sumedia-winestro-installation",path:"installation"},migration:{component:"sumedia-winestro-migration",path:"migration"},loganalyzer:{component:"sumedia-winestro-loganalyzer",path:"loganalyzer"},connections:{component:"sumedia-winestro-connections",path:"connections"},measurements:{component:"sumedia-winestro-measurements",path:"measurements"},properties:{component:"sumedia-winestro-properties",path:"properties"},salechannels:{component:"sumedia-winestro-salechannels",path:"salechannels"},tasks:{component:"sumedia-winestro-tasks",path:"tasks"},tasksExtensions:{component:"sumedia-winestro-tasks-extensions",path:"tasks-extensions"},cron:{component:"sumedia-winestro-cron",path:"cron"}}}},settingsItem:[{group:"plugins",to:"sumedia.winestro.configuration.overview",icon:"regular-database"}]})}()}();